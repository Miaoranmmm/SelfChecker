{
  "2ea5e999-e6ad-466d-b560-c65172d54abe": {
    "query": "What inspired the creation of the first ever computer programming language, and who was responsible for its development?",
    "response": "That's a great question. The first programming language for a computer was **Plankalk\u00fcl**, developed by **Konrad Zuse** for the **Z3** between 1943 and 1945[^1^]. However, it was not implemented until 1998[^1^]. Plankalk\u00fcl was inspired by mathematical logic and set theory[^2^]. The first high-level programming language was **Short Code**, which was proposed by **John Mauchly** in 1949[^1^]. Short Code used mnemonic symbols to represent mathematical expressions[^4^].",
    "adaptiveCards": [
      {
        "type": "AdaptiveCard",
        "version": "1.0",
        "body": [
          {
            "type": "TextBlock",
            "text": "[1]: https://www.computerhope.com/issues/ch001621.htm \"What Was the First Computer Programming Language?\"\n[2]: https://en.wikipedia.org/wiki/History_of_programming_languages \"History of programming languages - Wikipedia\"\n[3]: https://www.codecademy.com/resources/blog/what-programming-language-should-i-learn/ \"What Programming Language Should You Learn First? - Codecademy News\"\n[4]: https://www.hp.com/us-en/shop/tech-takes/computer-history-programming-languages \"Computer History: A Timeline of Computer Programming Languages\"\n\nThat's a great question. The first programming language for a computer was **Plankalk\u00fcl**, developed by **Konrad Zuse** for the **Z3** between 1943 and 1945[^1^][1]. However, it was not implemented until 1998[^1^][1]. Plankalk\u00fcl was inspired by mathematical logic and set theory[^2^][2]. The first high-level programming language was **Short Code**, which was proposed by **John Mauchly** in 1949[^1^][1]. Short Code used mnemonic symbols to represent mathematical expressions[^3^][4].\n",
            "wrap": true
          },
          {
            "type": "TextBlock",
            "size": "small",
            "text": "Learn more: [1. www.computerhope.com](https://www.computerhope.com/issues/ch001621.htm) [2. en.wikipedia.org](https://en.wikipedia.org/wiki/History_of_programming_languages) [3. www.hp.com](https://www.hp.com/us-en/shop/tech-takes/computer-history-programming-languages) [4. www.codecademy.com](https://www.codecademy.com/resources/blog/what-programming-language-should-i-learn/)",
            "wrap": true
          }
        ]
      }
    ],
    "sourceAttributions": [
      {
        "providerDisplayName": "What Was the First Computer Programming Language?",
        "seeMoreUrl": "https://www.computerhope.com/issues/ch001621.htm",
        "searchQuery": "first computer programming language"
      },
      {
        "providerDisplayName": "History of programming languages - Wikipedia",
        "seeMoreUrl": "https://en.wikipedia.org/wiki/History_of_programming_languages",
        "searchQuery": "first computer programming language"
      },
      {
        "providerDisplayName": "Computer History: A Timeline of Computer Programming Languages",
        "seeMoreUrl": "https://www.hp.com/us-en/shop/tech-takes/computer-history-programming-languages",
        "searchQuery": "first computer programming language"
      },
      {
        "providerDisplayName": "What Programming Language Should You Learn First? - Codecademy News",
        "seeMoreUrl": "https://www.codecademy.com/resources/blog/what-programming-language-should-i-learn/",
        "searchQuery": "first computer programming language"
      }
    ],
    "fact-checking": {
      "subclaims": [
        "The first programming language for a computer was Plankalk\u00fcl, developed by Konrad Zuse for the Z3 between 1943 and 1945.",
        "Plankalk\u00fcl was not implemented until 1998.",
        "Plankalk\u00fcl was inspired by mathematical logic and set theory.",
        "The first high-level programming language was Short Code.",
        "Short Code was proposed by John Mauchly in 1949.",
        "Short Code used mnemonic symbols to represent mathematical expressions."
      ],
      "queries": [
        "Plankalk\u00fcl first programming language computer Konrad Zuse Z3 development",
        "Plankalk\u00fcl implementation date",
        "Plankalk\u00fcl inspiration mathematical logic set theory",
        "Short Code first high-level programming language",
        "John Mauchly Short Code proposal date",
        "Short Code programming language mnemonic symbols math expressions"
      ],
      "search_results": {
        "The first programming language for a computer was Plankalk\u00fcl, developed by Konrad Zuse for the Z3 between 1943 and 1945.": [
          {
            "title": "Plankalk\u00fcl Programming Language: History, Origin, and More",
            "url": "https://history-computer.com/plankalkul-guide/",
            "content": [
              "Plankalk\u00fcl Programming Language: History, Origin, and More",
              "Trending Now: \u203a \u203a Plankalku\u0308l Programming Language: History, Origin, and More Updated: July 31, 2023 by History Computer Staff | Leave a comment Plankalku\u0308l is a programming language ideal for engineering purposes.",
              "The language was developed by Konrad Zuse, a German engineer and computer pioneer in the 1940s, and stood out as the first high-level computer programming language to be created.",
              "Basically, the name Plankalku\u0308l builds from the German term Kalku\u0308l, which means formal system.",
              "Therefore, Plankalku\u0308l stands for Formal System for planning.",
              "When Zuse created his Plankalku\u0308l language, the world was fighting the Second World War.",
              "At the time, everyone\u2019s focus was on the war, which made it hard for the language to gain attention and momentum.",
              "Due to that, the implementation of the programming language idea flopped, making it remain only on paper.",
              "Besides, Zuse himself had developed a Z3 computer during the same time and was busy commercializing it.",
              "Therefore, he put less effort into implementing the Plankalku\u0308l programming language, which contributed to its failure.",
              "Later on, John Backus came in with his Fortran programming language, which became the world\u2019s first-ever successful computer programming language to be widely used.",
              "Using modern programming terminology, Plankalku\u0308l is a typed high-level imperative programming language with the following main features: To use Plankalku\u0308l Programming Language, you need to know a few basics.",
              "To start with here is how to write Hello World in Plankalku\u0308l: R1.",
              "1(V0[:SIG]) => R0 R1.",
              "2(V0[:M X SIG]) => R0 0 => I | M + 1 => J [W [ I < J -> [ R1.",
              "1(V0[I: M X SIG]) => R0 | I + 1 => I ] ] ] END R1.",
              "3() => R0 \u2018H\u2019;",
              "\u2019E\u2019;",
              "\u2019L\u2019;",
              "\u2019L\u2019;",
              "\u2019O\u2019;",
              "\u2019,\u2019;",
              "\u2019 \u2018;",
              "\u2019W\u2019;",
              "\u2019O\u2019;",
              "\u2019R\u2019;",
              "\u2019L\u2019;",
              "\u2019D\u2019;",
              "\u2019!",
              "\u2019 => Z0[: M X SIG] R1.",
              "2(Z0) => R0 END Plankalku\u0308l uses a Boolean or single bit, which is the only primitive data type of the language.",
              "It is denoted by an identifier SO.",
              "Other composite data types are based on the primitive data type through records and arrays.",
              "Modern computing with an eight-bits sequence is denoted by 8 xSO.",
              "You can define the Boolean matrix as m x n xSO.",
              "The language also has identifiers for its variables.",
              "These are alphanumeric characters containing a number.",
              "They include: Subprograms and programs in Plankalku\u0308l are denoted with the letter P, followed by the program type, and later, subprogram, which is optional.",
              "For instance, p14, p6.",
              "8.",
              "This programming language also enables access to separate elements through a component index.",
              "The modern language describes it through a notation same as V0[0], V0[0][i], V0[0][i][j] Another vital part to understand in Plankalku\u0308l is the Two-dimensional syntax.",
              "Each Plankalku\u0308l instruction involves multiple rows for it to write.",
              "That\u2019s because the language writes indexes of variables vertically.",
              "In the first row, you get variable kind, followed by variable number denoted by the letter V, then variable indexes subcomponents marked K, and finally, variable type marked with S.",
              "How to Learn Plankalku\u0308l Even though the online materials for learning Plankalku\u0308l are limited, you can still benefit from the few tutorials and books available.",
              "If you don\u2019t know where to start, check out these materials: While Plankalku\u0308l was the first-ever high-level programming language to be developed for a computer, the ideas remained only on paper.",
              "That\u2019s because the world was fighting at the time, causing it not to attract much attention.",
              "On the other hand, Backus\u2019s Fortran became the first programming language to be commercially successful and used widely across the globe.",
              "Its success was attributed to the rising need for scientific and mathematical computations.",
              "Unlike Zuse\u2019s language, Backus\u2019s programming language gained acceptance, as it would replace manual hand-coding, which was tiresome and time-consuming.",
              "Regarding data types, Fortran delivers five essential data types;",
              "integer type, complex type, character type, logical type, and real type.",
              "On the contrary, Plankalku\u0308l has one primitive data type;",
              "a Boolean or single bit.",
              "All the other composite data types rely on the primitive through records and arrays.",
              "Konrad Zuse, a German engineer and computer pioneer, is the mind behind the famous Plankalku\u0308l computer programming language.",
              "The inventor also developed the first relay computer and its successors.",
              "When Zuse started developing computing machines, he was unaware of any other existing mechanical computing machines at the time.",
              "But later on, when building his Z3 computer, he was inspired by Hilbert\u2019s book on elementary mathematical logic.",
              "Zuse decided to invent his notation system and diagram to define logical circuits.",
              "He named his invention combinatorics of conditionals.",
              "In 1938, after developing his Z1 computer, Zuse found out that the calculus he had created already existed under the name proportional calculus.",
              "But what Zuse wanted was something more powerful.",
              "In 1939, the German inventor came up with an idea to develop something that later became Plankalku\u0308l.",
              "When it came to 1942, while handling his doctoral dissertation, Zuse invented his first formal algorithm notation system.",
              "The system could handle loops and branches.",
              "This Ph.",
              "D.",
              "dissertation is where Zuse initially described his Plankalku\u0308l language.",
              "In 1945, Zuse wrote an unpublished book describing his Plankalku\u0308l.",
              "Unfortunately, he didn\u2019t submit his manuscript following the collapse of Nazi Germany.",
              "During that time, only two computers were working in the entire world;",
              "Harvard Mark I and ENIAC.",
              "None of the two computers made use of a compiler.",
              "In fact, the only way to reprogram ENIAC for every task was to change the wire connections.",
              "The allied bombing in Germany in 1945 saw most of Zuse\u2019s computers destroyed.",
              "Luckily, he salvaged one computer, dubbed Z4, and took it to Hinterstein.",
              "Following an order by the allied powers forbidding the building of computers, Zuse remained with no choice but to devote his time to something else.",
              "For that reason, he started developing a high-level programming language model.",
              "The language was designed to create procedures, store code chunks to repeatedly revoke the codes for routine functions and structure data like database recording.",
              "Furthermore, the language had conditional statements for modification of program executions.",
              "In 1948, Zuse had an opportunity to publish his paper in the Archiv der Mathematik, and also gave a presentation about it at the GAMM\u2019s Annual General Meeting.",
              "Unfortunately, his work didn\u2019t attract much attention.",
              "When giving a lecture in 1957, Zuse was positive and expressed hope that his Plankalku\u0308l would someday come back to life.",
              "However, he was disappointed that ALGOL designers failed to acknowledge the positive impact of Plankalku\u0308l on their work.",
              "And finally, a comprehensive publication of the Plankalku\u0308l programming language happened in 1972.",
              "Even so, the implementation of its first compiler was done in 1995 by Joachim Hohmann in his dissertation paper.",
              "Thereafter, other independent applications took place in 1998 and then in 2000 at the University of Berlin.",
              "When Zuse created his Plankalku\u0308l language, the world was fighting the Second World War.",
              "At the time, everyone\u2019s focus was on the war, which made it hard for the language to gain attention and momentum.",
              "Due to that, the implementation of the programming language idea flopped, making it remain only on paper.",
              "The image featured at the top of this post is \u00a9Abubiju at German Wikipedia, Public domain, via Wikimedia Commons.",
              "What is Plankalku\u0308l?",
              "Plankalku\u0308l refers to a programming language developed by Konrad Zuse in 1940s.",
              "Initially, the language was designed for engineering purposes and was the first to be developed for a computer.",
              "Who invented the Plankalku\u0308 Programming Language?",
              "Konrad Zuse, a German engineer, and computer pioneer, is the mind behind Plankalku\u0308l Programming Language.",
              "He also developed the first relay computer.",
              "The inventor was born on 22 June 1910 in Berlin.",
              "When was the Plankalku\u0308l Programming Language created?",
              "The Plankalku\u0308l Programming Language came into existence in 1948.",
              "How was Plankalku\u0308l made?",
              "Zuse was working on his Ph.",
              "D.",
              "dissertation when he came up with his first formal algorithm notation system.",
              "Through that, the idea of Plankalku\u0308l grew, and he described it in his dissertation paper.",
              "What is the simplest data type of Plankalku\u0308l?",
              "There are very few Plankalku\u0308l datatypes available today.",
              "The only initial data type is a Boolean or single bit.",
              "What was Plankalku\u0308l used for?",
              "Plankalku\u0308l was initially developed for engineering purposes, but its implementation never happened.",
              "Your email address will not be published.",
              "Required fields are marked * Save my name, email, and website in this browser for the next time I comment.",
              "\u0394 This site uses Akismet to reduce spam.",
              "Learn how your comment data is processed.",
              "Related Articles Updated: July 31, 2023 by Abby 4 Facts About Fortran The name Fortran derives from the name Formula Translation.",
              "Initially, the spelling of the name was in all-uppercase [.",
              ".",
              ".]",
              "Updated: August 1, 2023 by History Computer Staff Key Points Although Zuse was a talented artist, he opted for studying civil engineering at the Technical College (Technischen Hochschule) in [.",
              ".",
              ".]",
              "Updated: October 21, 2023 by Duncan Dodsworth Key PointsAssembly Language was one of the first programming languages to be implemented and is still used today in niche [.",
              ".",
              ".]",
              "Tagged Updated: July 31, 2023 by Abby Key Points: Konrad Zuse is known for designing the S2 computing machine, one of the first electronic calculating machines that had [.",
              ".",
              ".]",
              "Updated: December 8, 2022 by Abby Key Points: Boolean logic strictly focuses on binary variables that typically come in 1s and 0s which represent \u201ctrue\u201d or \u201cfalse.",
              "\u201dWhere [.",
              ".",
              ".]",
              "Updated: July 31, 2023 by History Computer Staff The software industry is one of the largest and most influential industries in the world presently.",
              "It began as early [.",
              ".",
              ".]",
              "Updated: July 31, 2023 by Abby Key Points: George Stibitz was an American inventor and computer pioneer who is best known for his time at Bell Labs [.",
              ".",
              ".]",
              "Updated: August 1, 2023 by Abby What is JSON: Everything to Know 6 Facts about JSON According to its creator, JSON is pronounced like the name Jason.",
              "However, [.",
              ".",
              ".]",
              "Updated: July 28, 2023 by Abby Key Points: Originally, Von Neuman Architecture referred to the specific proposed architecture for a computer as stated by John von Neumann [.",
              ".",
              ".]",
              "Published: October 19, 2023 by David Beren For better or worse, computers have become an integral part of our daily lives, and imagining life without them almost [.",
              ".",
              ".]",
              "Tagged Updated: July 31, 2023 by History Computer Staff George Boole was a mathematician, philosopher, logician and author of The Laws of Thought among other books.",
              "Key Points: Boole created [.",
              ".",
              ".]",
              "Updated: July 25, 2023 by Abby Key Points: Shakey the Robot, built in the 1960\u2019s, was the first mobile robot able to perceive and reason about its [.",
              ".",
              ".]",
              "Updated: August 1, 2023 by History Computer Staff Key Points George\u2019s aptitude for science and engineering got him into Moraine Park, Dayton, an experimental high school established by Charles [.",
              ".",
              ".]",
              "Updated: December 2, 2022 by History Computer Staff Key Points: Fuzzy matching is basically when a computer, or program, tries to correctly determine the intent of an input [.",
              ".",
              ".]",
              "Updated: July 26, 2023 by History Computer Staff Key Points Emanuel Goldberg was a German scientist and inventor from the mid-1920s.",
              "He is most famous for advancing library automation with [.",
              ".",
              ".]",
              "Popular Articles What Channel Is Fox on AT&T U-Verse?",
              "3 weeks ago The 6 Best-Paying Tech Jobs in North Carolina 4 months ago How to Remove a Language or Restart Courses in Duolingo 2 months ago Bringing news and information about computers, people, inventions, & technology.",
              "As an Amazon Associate I earn from qualifying purchases.",
              "Learn more about us & read our affiliate disclosure."
            ]
          },
          {
            "title": "Plankalk\u00fcl - Wikipedia",
            "url": "https://en.wikipedia.org/wiki/Plankalk%C3%BCl",
            "content": [
              "Plankalk\u00fcl - Wikipedia",
              "Plankalku\u0308l (German pronunciation: [\u02c8pla\u02d0nkalky\u02d0l]) is a programming language designed for engineering purposes by Konrad Zuse between 1942 and 1945.",
              "It was the first high-level programming language to be designed for a computer.",
              "Kalku\u0308l is the German term for a formal system\u2014as in Hilbert-Kalku\u0308l, the original name for the Hilbert-style deduction system\u2014so Plankalku\u0308l refers to a formal system for planning.",
              "[3] In the domain of creating computing machines, Zuse was self-taught, and developed them without knowledge about other mechanical computing machines that existed already \u2013 although later on (building the Z3) being inspired by Hilbert's and Ackermann's book on elementary mathematical logic (see Principles of Mathematical Logic).",
              "[4]: 113, 152, 216 To describe logical circuits, Zuse invented his own diagram and notation system, which he called \"combinatorics of conditionals\" (German: Bedingungskombinatorik).",
              "After finishing the Z1 in 1938, Zuse discovered that the calculus he had independently devised already existed and was known as propositional calculus.",
              "[5]: 3 What Zuse had in mind, however, needed to be much more powerful (propositional calculus is not Turing-complete and is not able to describe even simple arithmetic calculations[6]).",
              "In May 1939, he described his plans for the development of what would become Plankalku\u0308l.",
              "[4]: 113, 152, 216 He wrote the following in his notebook: Seit etwa einem halben Jahr allma\u0308hliches Einfu\u0308hren in die formale Logik.",
              "Viele meiner fru\u0308heren Gedanken habe ich dort wiedergefunden.",
              "(Bedingungskombinatorik = Aussagenlogik;",
              "Lehre von den Intervallen = Gebietenkalku\u0308l).",
              "Ich plane jetzt die Aufsetzung des 'Plankalku\u0308ls'.",
              "Hierzu sind eine Reihe von Begriffen zu kla\u0308ren.",
              "Almost half a year of gradual introduction into formal logic.",
              "I rediscovered there lots of my previous thoughts.",
              "(combinatorics of conditionals = propositional calculus;",
              "study of intervals = lattice theory).",
              "I now plan the adoption of \"Calculus of plans\" onto this.",
              "A series of concepts need to be clarified for this.",
              "While working on his doctoral dissertation, Zuse developed the first known formal system of algorithm notation[7]: 9 capable of handling branches and loops.",
              "[8]: 18 [4]: 56 In 1942 he began writing a chess program in Plankalku\u0308l.",
              "[4]: 216\u2013217 In 1944, Zuse met with the German logician and philosopher Heinrich Scholz, who expressed appreciation for Zuse's utilization of logical calculus.",
              "[9] In 1945, Zuse described Plankalku\u0308l in an unpublished book.",
              "[10] The collapse of Nazi Germany, however, prevented him from submitting his manuscript.",
              "[8]: 18 At that time the only two working computers in the world were ENIAC and Harvard Mark I, neither of which used a compiler, and ENIAC needed to be reprogrammed for each task by changing how the wires were connected.",
              "[5]: 3 Although most of his computers were destroyed by Allied bombs, Zuse was able to rescue one machine, the Z4, and move it to the Alpine village of Hinterstein[7]: 8 (part of Bad Hindelang).",
              "The very first attempt to devise an algorithmic language was undertaken in 1948 by K.",
              "Zuse.",
              "His notation was quite general, but the proposal never attained the consideration it deserved.",
              "Unable to continue building computers \u2013 which was also forbidden by the Allied Powers[11] \u2013 Zuse devoted his time to the development of a higher-level programming model and language.",
              "[8]: 18 In 1948, he published a paper in the Archiv der Mathematik and presented at the Annual Meeting of the GAMM.",
              "[4]: 89 His work failed to attract much attention.",
              "[citation needed] In a 1957 lecture, Zuse expressed his hope that Plankalku\u0308l, \"after some time as a Sleeping Beauty, will yet come to life.\"",
              "[5]: 3 He expressed disappointment that the designers of ALGOL 58 never acknowledged the influence of Plankalku\u0308l on their own work.",
              "[8]: 18 [7]: 15 Plankalku\u0308l was republished with commentary in 1972.",
              "[12] The first compiler was implemented by Joachim Hohmann in his 1975 dissertation.",
              "[13] Other independent implementations followed in 1998[14] and 2000 at the Free University of Berlin.",
              "[5]: 2 Plankalku\u0308l has drawn comparisons to the language APL, and to relational algebra.",
              "It includes assignment statements, subroutines, conditional statements, iteration, floating-point arithmetic, arrays, hierarchical record structures, assertions, exception handling, and other advanced features such as goal-directed execution.",
              "The Plankalku\u0308l provides a data structure called generalized graph (verallgemeinerter Graph), which can be used to represent geometrical structures.",
              "[15] Many features of the Plankalku\u0308l reappear in later programming languages;",
              "an exception is its idiosyncratic two-dimensional notation using multiple lines.",
              "Some features of the Plankalku\u0308l:[4]: 217 The only primitive data type in the Plankalku\u0308l is a single bit or Boolean (German: Ja-Nein-Werte \u2013 yes-no value in Zuse's terminology).",
              "It is denoted by the identifier S 0 {\\displaystyle S0} .",
              "All the further data types are composite, and build up from primitive by means of \"arrays\" and \"records\".",
              "[16]: 679 So, a sequence of eight bits (which in modern computing could be regarded as byte) is denoted by 8 \u00d7 S 0 {\\displaystyle 8\\times S0} , and Boolean matrix of size m {\\displaystyle m} by n {\\displaystyle n} is described by m \u00d7 n \u00d7 S 0 {\\displaystyle m\\times n\\times S0} .",
              "There also exists a shortened notation, so one could write S 1 \u22c5 n {\\displaystyle S1\\cdot n} instead of n \u00d7 S 0 {\\displaystyle n\\times S0} .",
              "[16]: 679 Type S 0 {\\displaystyle S0} could have two possible values 0 {\\displaystyle 0} and L {\\displaystyle L} .",
              "So 4-bit sequence could be written like L00L, but in cases where such a sequence represents a number, the programmer could use the decimal representation 9.",
              "[16]: 679 Record of two components \u03c3 {\\displaystyle \\sigma } and \u03c4 {\\displaystyle \\tau } is written as ( \u03c3 , \u03c4 ) {\\displaystyle (\\sigma ,\\tau )} .",
              "[16]: 679 Type (German: Art) in Plankalku\u0308l consists of 3 elements: structured value (German: Struktur), pragmatic meaning (German: Typ) and possible restriction on possible values (German: Beschra\u0308nkung).",
              "[16]: 679 User defined types are identified by letter A with number, like A 1 {\\displaystyle A1} \u2013 first user defined type.",
              "Zuse used a lot of examples from chess theory:[16]: 680 Identifiers are alphanumeric characters with a number.",
              "[16]: 679 There are the following kinds of identifiers for variables:[10]: 10 Particular variable of some kind is identified by number, written under the kind.",
              "[16]: 679 For example: Programs and subprograms are marked with a letter P, followed by a program (and optionally a subprogram) number.",
              "For example P 13 {\\displaystyle P13} , P 5 \u22c5 7 {\\displaystyle P5\\cdot 7} .",
              "[16]: 679 Output value of program P 13 {\\displaystyle P13} saved there in variable R 0 {\\displaystyle {\\begin{matrix}R\\\\0\\end{matrix}}} is available for other subprograms under the identifier R 17 0 {\\displaystyle {\\begin{matrix}R17\\\\0\\end{matrix}}} , and reading value of that variable also means executing related subprogram.",
              "[16]: 680 Plankalku\u0308l allows access for separate elements of variable by using \"component index\" (German: Komponenten-Index).",
              "When, for example, program receives input in variable V 0 {\\displaystyle {\\begin{matrix}V\\\\0\\end{matrix}}} of type A 10 {\\displaystyle A10} (game state), then V 0 0 {\\displaystyle {\\begin{matrix}V\\\\0\\\\0\\end{matrix}}} \u2014 gives board state, V 0 0 \u22c5 i {\\displaystyle {\\begin{matrix}V\\\\0\\\\0\\cdot i\\end{matrix}}} \u2014 piece on square number i, and V 0 0 \u22c5 i \u22c5 j {\\displaystyle {\\begin{matrix}V\\\\0\\\\0\\cdot i\\cdot j\\end{matrix}}} bit number j of that piece.",
              "[16]: 680 In modern programming languages, that would be described by notation similar to V0[0], V0[0][i], V0[0][i][j] (although to access a single bit in modern programming languages a bitmask is typically used).",
              "Because indexes of variables are written vertically, each Plankalku\u0308l instruction requires multiple rows to write down.",
              "[citation needed] First row contains variable kind, then variable number marked with letter V (German: Variablen-Index), then indexes of variable subcomponents marked with K (German: Komponenten-Index), and then (German: Struktur-Index) marked with S, which describes variable type.",
              "Type is not required, but Zuse notes that this helps with reading and understanding the program.",
              "[16]: 681 In the line S {\\displaystyle S} types S 0 {\\displaystyle S0} and S 1 {\\displaystyle S1} could be shortened to 0 {\\displaystyle 0} and 1 {\\displaystyle 1} .",
              "[16]: 681 Examples: Indexes could be not only constants.",
              "Variables could be used as indexes for other variables, and that is marked with a line, which shows in which component index would value of variable be used: Zuse introduced in his calculus an assignment operator, unknown in mathematics before him.",
              "He marked it with \u00ab \u21d2 {\\displaystyle \\Rightarrow } \u00bb, and called it yields-sign (German: Ergibt-Zeichen).",
              "Use of concept of assignment is one of the key differences between mathematics and computer science.",
              "[7]: 14 Zuse wrote that the expression: is analogous to the more traditional mathematical equation: There are claims that Konrad Zuse initially used the glyph as a sign for assignment, and started to use \u21d2 {\\displaystyle \\Rightarrow } under the influence of Heinz Rutishauser.",
              "[16]: 681 Knuth and Pardo believe that Zuse always wrote \u21d2 {\\displaystyle \\Rightarrow } , and that was introduced by publishers of \u00abU\u0308ber den allgemeinen Plankalku\u0308l als Mittel zur Formulierung schematisch-kombinativer Aufgaben\u00bb in 1948.",
              "[7]: 14 In the ALGOL 58 conference in Zu\u0308rich, European participants proposed to use the assignment character introduced by Zuse, but the American delegation insisted on :=.",
              "[16]: 681 The variable that stores the result of an assignment (l-value) is written to the right side of assignment operator.",
              "[7]: 14 The first assignment to the variable is considered to be a declaration.",
              "[16]: 681 The left side of assignment operator is used for an expression (German: Ausdruck), that defines which value will be assigned to the variable.",
              "Expressions could use arithmetic operators, Boolean operators, and comparison operators ( = , =\u0338 , \u2264 {\\displaystyle =,\\neq ,\\leq } etc.)",
              ".",
              "[16]: 682 The exponentiation operation is written similarly to the indexing operation - using lines in the two-dimensional notation:[10]: 45 Boolean values were represented as integers with FALSE=0 and TRUE=1.",
              "Conditional control flow took the form of a guarded statement A -> B, which executed the block B if A was true.",
              "There was also an iteration operator, of the form W { A -> X;",
              "B -> Y} which repeats until all guards are false.",
              "[17] Zuse called a single program a Rechenplan (\"computation plan\").",
              "He envisioned what he called a Planfertigungsgera\u0308t (\"plan assembly device\"), which would automatically translate the mathematical formulation of a program into machine-readable punched film stock, something today would be called a translator or compiler.",
              "[4]: 45, 104, 105 The original notation was two-dimensional.",
              "[clarification needed] For a later implementation in the 1990s, a linear notation was developed.",
              "The following example defines a function max3 (in a linear transcription) that calculates the maximum of three variables:"
            ]
          },
          {
            "title": "Zuse&#39;s Z3 computer and the digital revolution \u2013 DW \u2013 05/11/2016",
            "url": "https://www.dw.com/en/konrad-zuse-and-the-digital-revolution-he-started-with-the-z3-computer-75-years-ago/a-19249238",
            "content": [
              "Zuse&#39;s Z3 computer and the digital revolution \u2013 DW \u2013 05/11/2016",
              "On May 12, 1941, Konrad Zuse presented the Z3 - the first automatic, programmable computer.",
              "It didn't survive the war.",
              "But his ideas did, giving us computing as we know it.",
              "Even for the skeptics among us, it's hard to overstate the importance of this anniversary: 75 years ago - at the height of the Second World War - a 31-year-old German civil engineer called Konrad Zuse presented the Z3.",
              "It was the first programmable, automatic computer - and was widely viewed as the child of a family of machines we take for granted today, from desktop computers and mobile devices to the massive data centers controlling the world.",
              "Compared to the phones and pads we carry in our pockets, however, the Z3 was huge.",
              "It was a cluster of glass-fronted wooden cabinets and wiring looms. And its use was not intended for gaming or social networking on trams and in school yards, but for the German Aircraft Research Institute to perform statistical analyses of wing-flutter.",
              "The Z3 was an entirely new concept, built well before the invention of transistors, as used in contemporary computer chips, and a good 40 years before Richard Feynman even proposed using quantum mechanics.",
              "Instead, the Z3 was built with vacuum tubes as switching elements.",
              "The Z3, zeros and ones Helmut Schreyer, a colleague of Zuse's, suggested using vacuum tubes to achieve what we now call \"flip-flops\" - the ability to switch between two stable states.",
              "It's based on Boolean mathematical theory, which continues to underpin programming, whether you use the JavaScript language to build website applications, desktop software, or you're constructing a mega algorithm for online search or big data analysis.",
              "So what Google, Facebook, Apple and others do today all started in wartime Germany.",
              "Like so much else.",
              "But there's only a small chance Zuse and Schreyer knew what they were doing.",
              "\"In 1941, probably no one - not even Zuse or one of the other inventors of computing machines - could have imagined how, decades later, such machines would have an impact on our everyday lives,\" says Matthias Hagen, a professor of big data analytics at Bauhaus University Weimar.",
              "\"Not to mention how small, powerful and cheap these devices would get.\"",
              "General Purpose Technology As with the anniversary itself, it's equally hard to overstate the ubiquity of computers today.",
              "Computing - whether as hardware or software - is omnipresent.",
              "Eric Schmidt, the executive chairman of Alphabet Inc.",
              "(formerly Google), has said these technologies will \"disappear\" - we will no longer see them - once they have infiltrated every aspect of our lives.",
              "Essentially, we are already there.",
              "It was to be expected.",
              "\"Computers are one of the 'general purpose technologies,'\" says Hagen.",
              "That puts them in the same league as steam power, electricity and the internal combustion engine, as described by Erik Brynjolfsson and Andrew McAfee in \"Race Against The Machine.\"",
              "\"Computers are the GPT of our era,\" they wrote in 2011, \"especially when combined with networks and labeled 'information and communication technology.'",
              "\" And, thanks to Konrad Zuse, computers and computer networks are what we have.",
              "\"Computers are a consciousness changing technology, perhaps the biggest one since the invention of fire,\" says Matt Black, a musician and creative technologies pioneer.",
              "\"I read 'The Shockwave Rider' in 1976 and it blew my mind with a vision of computers and networks.",
              "Also 'The Selfish Gene' with its analogy between DNA code and computer code.",
              "Computers are nothing less than the next stage in our evolution.\"",
              "How far we have come If you're struggling to imagine the significance of the Z3 in 1941, try thinking back to your first computer and how it compares to the devices you use today.",
              "What was it?",
              "How much memory did it have?",
              "What was its processor speed?",
              "Here's what some of our Twitter followers started out with: I used a BBC Micro at school and had an Atari 1040ST at home for gaming and desktop publishing (.",
              ".",
              ".",
              "the young writer in me).",
              "For Ijad Madisch, co-founder and CEO of ResearchGate, it was a Commodore 386SX-16.",
              "\"I became fascinated with computers around the same time I became fascinated with viruses.",
              "I asked myself why we couldn't compute the many different forms the [HIV] virus could take to help our immune system tackle it,\" says Madisch.\"",
              "I finally got a 386SX-16 that I mainly used for playing games and programming simple websites.",
              "But the initial idea stuck.",
              "Programming and science belong together and are key to tackling the challenges we face today.\"",
              "These and other computers, like the ZX Spectrum, were light years ahead of the Z3, with its average calculation speed of between 0.",
              "8 and 3 seconds, and data memory of 64 words at 22 bits.",
              "But at the same time, they are positively infantile compared to the laptops, smartphones and wearables we casually drop each day in the streets.",
              "Quantum computing or bust The development of computing won't slow now - at least not for the foreseeable future.",
              "It's a digital \"revolution\" only an alien counter-revolution could stop.",
              "\"I started with a [Sinclair] ZX81, a tape drive and a television,\" says Andreas Fuhrer, a quantum scientist at IBM.",
              "\"And at that point, I did not think about quantum computing.",
              "I had my one-meg hard drive for a thousand bucks or whatever.",
              "But as I studied physics, I started to hear about these ideas.\"",
              "The estimated power of quantum computing is staggering: a qubit can represent a one, a zero, or both at once - a superposition.",
              "Put simply, it can do loads more.",
              "Fuhrer says we're in a similar \"initial phase\" with quantum computing as people were in with \"the big\" Zuse machines in the 1930s and 40s.",
              "\"People are learning how to program these systems and finding applications as they go along.",
              "We've shown we can build the basic unit, this 5 qubit unit cell, and we have an idea how it can be scaled,\" Fuhrer says.",
              "And isn't scale everything?",
              "We're told we want ever-faster, ever-smaller devices.",
              "To this end, the IBM system is currently available via a cloud platform, because it's too big and fragile to move around.",
              "But I'd like to suggest it won't be long before we all get networked, quantum implants at birth.",
              "\"I see no end to the technological developments regarding computing,\" says Professor Matthew Bailes, an astronomer at Swinburne University of Technology.",
              "\"I suspect that in the future we will soon wonder how we managed with such primitive devices in 2016.",
              "Artificial intelligence will be the dominant issue.",
              "It will be the last great revolution in human technological evolution.\""
            ]
          }
        ],
        "Plankalk\u00fcl was not implemented until 1998.": [
          {
            "title": "Plankalk\u00fcl - Wikipedia",
            "url": "https://en.wikipedia.org/wiki/Plankalk%C3%BCl",
            "content": [
              "Plankalk\u00fcl - Wikipedia",
              "Plankalku\u0308l (German pronunciation: [\u02c8pla\u02d0nkalky\u02d0l]) is a programming language designed for engineering purposes by Konrad Zuse between 1942 and 1945.",
              "It was the first high-level programming language to be designed for a computer.",
              "Kalku\u0308l is the German term for a formal system\u2014as in Hilbert-Kalku\u0308l, the original name for the Hilbert-style deduction system\u2014so Plankalku\u0308l refers to a formal system for planning.",
              "[3] In the domain of creating computing machines, Zuse was self-taught, and developed them without knowledge about other mechanical computing machines that existed already \u2013 although later on (building the Z3) being inspired by Hilbert's and Ackermann's book on elementary mathematical logic (see Principles of Mathematical Logic).",
              "[4]: 113, 152, 216 To describe logical circuits, Zuse invented his own diagram and notation system, which he called \"combinatorics of conditionals\" (German: Bedingungskombinatorik).",
              "After finishing the Z1 in 1938, Zuse discovered that the calculus he had independently devised already existed and was known as propositional calculus.",
              "[5]: 3 What Zuse had in mind, however, needed to be much more powerful (propositional calculus is not Turing-complete and is not able to describe even simple arithmetic calculations[6]).",
              "In May 1939, he described his plans for the development of what would become Plankalku\u0308l.",
              "[4]: 113, 152, 216 He wrote the following in his notebook: Seit etwa einem halben Jahr allma\u0308hliches Einfu\u0308hren in die formale Logik.",
              "Viele meiner fru\u0308heren Gedanken habe ich dort wiedergefunden.",
              "(Bedingungskombinatorik = Aussagenlogik;",
              "Lehre von den Intervallen = Gebietenkalku\u0308l).",
              "Ich plane jetzt die Aufsetzung des 'Plankalku\u0308ls'.",
              "Hierzu sind eine Reihe von Begriffen zu kla\u0308ren.",
              "Almost half a year of gradual introduction into formal logic.",
              "I rediscovered there lots of my previous thoughts.",
              "(combinatorics of conditionals = propositional calculus;",
              "study of intervals = lattice theory).",
              "I now plan the adoption of \"Calculus of plans\" onto this.",
              "A series of concepts need to be clarified for this.",
              "While working on his doctoral dissertation, Zuse developed the first known formal system of algorithm notation[7]: 9 capable of handling branches and loops.",
              "[8]: 18 [4]: 56 In 1942 he began writing a chess program in Plankalku\u0308l.",
              "[4]: 216\u2013217 In 1944, Zuse met with the German logician and philosopher Heinrich Scholz, who expressed appreciation for Zuse's utilization of logical calculus.",
              "[9] In 1945, Zuse described Plankalku\u0308l in an unpublished book.",
              "[10] The collapse of Nazi Germany, however, prevented him from submitting his manuscript.",
              "[8]: 18 At that time the only two working computers in the world were ENIAC and Harvard Mark I, neither of which used a compiler, and ENIAC needed to be reprogrammed for each task by changing how the wires were connected.",
              "[5]: 3 Although most of his computers were destroyed by Allied bombs, Zuse was able to rescue one machine, the Z4, and move it to the Alpine village of Hinterstein[7]: 8 (part of Bad Hindelang).",
              "The very first attempt to devise an algorithmic language was undertaken in 1948 by K.",
              "Zuse.",
              "His notation was quite general, but the proposal never attained the consideration it deserved.",
              "Unable to continue building computers \u2013 which was also forbidden by the Allied Powers[11] \u2013 Zuse devoted his time to the development of a higher-level programming model and language.",
              "[8]: 18 In 1948, he published a paper in the Archiv der Mathematik and presented at the Annual Meeting of the GAMM.",
              "[4]: 89 His work failed to attract much attention.",
              "[citation needed] In a 1957 lecture, Zuse expressed his hope that Plankalku\u0308l, \"after some time as a Sleeping Beauty, will yet come to life.\"",
              "[5]: 3 He expressed disappointment that the designers of ALGOL 58 never acknowledged the influence of Plankalku\u0308l on their own work.",
              "[8]: 18 [7]: 15 Plankalku\u0308l was republished with commentary in 1972.",
              "[12] The first compiler was implemented by Joachim Hohmann in his 1975 dissertation.",
              "[13] Other independent implementations followed in 1998[14] and 2000 at the Free University of Berlin.",
              "[5]: 2 Plankalku\u0308l has drawn comparisons to the language APL, and to relational algebra.",
              "It includes assignment statements, subroutines, conditional statements, iteration, floating-point arithmetic, arrays, hierarchical record structures, assertions, exception handling, and other advanced features such as goal-directed execution.",
              "The Plankalku\u0308l provides a data structure called generalized graph (verallgemeinerter Graph), which can be used to represent geometrical structures.",
              "[15] Many features of the Plankalku\u0308l reappear in later programming languages;",
              "an exception is its idiosyncratic two-dimensional notation using multiple lines.",
              "Some features of the Plankalku\u0308l:[4]: 217 The only primitive data type in the Plankalku\u0308l is a single bit or Boolean (German: Ja-Nein-Werte \u2013 yes-no value in Zuse's terminology).",
              "It is denoted by the identifier S 0 {\\displaystyle S0} .",
              "All the further data types are composite, and build up from primitive by means of \"arrays\" and \"records\".",
              "[16]: 679 So, a sequence of eight bits (which in modern computing could be regarded as byte) is denoted by 8 \u00d7 S 0 {\\displaystyle 8\\times S0} , and Boolean matrix of size m {\\displaystyle m} by n {\\displaystyle n} is described by m \u00d7 n \u00d7 S 0 {\\displaystyle m\\times n\\times S0} .",
              "There also exists a shortened notation, so one could write S 1 \u22c5 n {\\displaystyle S1\\cdot n} instead of n \u00d7 S 0 {\\displaystyle n\\times S0} .",
              "[16]: 679 Type S 0 {\\displaystyle S0} could have two possible values 0 {\\displaystyle 0} and L {\\displaystyle L} .",
              "So 4-bit sequence could be written like L00L, but in cases where such a sequence represents a number, the programmer could use the decimal representation 9.",
              "[16]: 679 Record of two components \u03c3 {\\displaystyle \\sigma } and \u03c4 {\\displaystyle \\tau } is written as ( \u03c3 , \u03c4 ) {\\displaystyle (\\sigma ,\\tau )} .",
              "[16]: 679 Type (German: Art) in Plankalku\u0308l consists of 3 elements: structured value (German: Struktur), pragmatic meaning (German: Typ) and possible restriction on possible values (German: Beschra\u0308nkung).",
              "[16]: 679 User defined types are identified by letter A with number, like A 1 {\\displaystyle A1} \u2013 first user defined type.",
              "Zuse used a lot of examples from chess theory:[16]: 680 Identifiers are alphanumeric characters with a number.",
              "[16]: 679 There are the following kinds of identifiers for variables:[10]: 10 Particular variable of some kind is identified by number, written under the kind.",
              "[16]: 679 For example: Programs and subprograms are marked with a letter P, followed by a program (and optionally a subprogram) number.",
              "For example P 13 {\\displaystyle P13} , P 5 \u22c5 7 {\\displaystyle P5\\cdot 7} .",
              "[16]: 679 Output value of program P 13 {\\displaystyle P13} saved there in variable R 0 {\\displaystyle {\\begin{matrix}R\\\\0\\end{matrix}}} is available for other subprograms under the identifier R 17 0 {\\displaystyle {\\begin{matrix}R17\\\\0\\end{matrix}}} , and reading value of that variable also means executing related subprogram.",
              "[16]: 680 Plankalku\u0308l allows access for separate elements of variable by using \"component index\" (German: Komponenten-Index).",
              "When, for example, program receives input in variable V 0 {\\displaystyle {\\begin{matrix}V\\\\0\\end{matrix}}} of type A 10 {\\displaystyle A10} (game state), then V 0 0 {\\displaystyle {\\begin{matrix}V\\\\0\\\\0\\end{matrix}}} \u2014 gives board state, V 0 0 \u22c5 i {\\displaystyle {\\begin{matrix}V\\\\0\\\\0\\cdot i\\end{matrix}}} \u2014 piece on square number i, and V 0 0 \u22c5 i \u22c5 j {\\displaystyle {\\begin{matrix}V\\\\0\\\\0\\cdot i\\cdot j\\end{matrix}}} bit number j of that piece.",
              "[16]: 680 In modern programming languages, that would be described by notation similar to V0[0], V0[0][i], V0[0][i][j] (although to access a single bit in modern programming languages a bitmask is typically used).",
              "Because indexes of variables are written vertically, each Plankalku\u0308l instruction requires multiple rows to write down.",
              "[citation needed] First row contains variable kind, then variable number marked with letter V (German: Variablen-Index), then indexes of variable subcomponents marked with K (German: Komponenten-Index), and then (German: Struktur-Index) marked with S, which describes variable type.",
              "Type is not required, but Zuse notes that this helps with reading and understanding the program.",
              "[16]: 681 In the line S {\\displaystyle S} types S 0 {\\displaystyle S0} and S 1 {\\displaystyle S1} could be shortened to 0 {\\displaystyle 0} and 1 {\\displaystyle 1} .",
              "[16]: 681 Examples: Indexes could be not only constants.",
              "Variables could be used as indexes for other variables, and that is marked with a line, which shows in which component index would value of variable be used: Zuse introduced in his calculus an assignment operator, unknown in mathematics before him.",
              "He marked it with \u00ab \u21d2 {\\displaystyle \\Rightarrow } \u00bb, and called it yields-sign (German: Ergibt-Zeichen).",
              "Use of concept of assignment is one of the key differences between mathematics and computer science.",
              "[7]: 14 Zuse wrote that the expression: is analogous to the more traditional mathematical equation: There are claims that Konrad Zuse initially used the glyph as a sign for assignment, and started to use \u21d2 {\\displaystyle \\Rightarrow } under the influence of Heinz Rutishauser.",
              "[16]: 681 Knuth and Pardo believe that Zuse always wrote \u21d2 {\\displaystyle \\Rightarrow } , and that was introduced by publishers of \u00abU\u0308ber den allgemeinen Plankalku\u0308l als Mittel zur Formulierung schematisch-kombinativer Aufgaben\u00bb in 1948.",
              "[7]: 14 In the ALGOL 58 conference in Zu\u0308rich, European participants proposed to use the assignment character introduced by Zuse, but the American delegation insisted on :=.",
              "[16]: 681 The variable that stores the result of an assignment (l-value) is written to the right side of assignment operator.",
              "[7]: 14 The first assignment to the variable is considered to be a declaration.",
              "[16]: 681 The left side of assignment operator is used for an expression (German: Ausdruck), that defines which value will be assigned to the variable.",
              "Expressions could use arithmetic operators, Boolean operators, and comparison operators ( = , =\u0338 , \u2264 {\\displaystyle =,\\neq ,\\leq } etc.)",
              ".",
              "[16]: 682 The exponentiation operation is written similarly to the indexing operation - using lines in the two-dimensional notation:[10]: 45 Boolean values were represented as integers with FALSE=0 and TRUE=1.",
              "Conditional control flow took the form of a guarded statement A -> B, which executed the block B if A was true.",
              "There was also an iteration operator, of the form W { A -> X;",
              "B -> Y} which repeats until all guards are false.",
              "[17] Zuse called a single program a Rechenplan (\"computation plan\").",
              "He envisioned what he called a Planfertigungsgera\u0308t (\"plan assembly device\"), which would automatically translate the mathematical formulation of a program into machine-readable punched film stock, something today would be called a translator or compiler.",
              "[4]: 45, 104, 105 The original notation was two-dimensional.",
              "[clarification needed] For a later implementation in the 1990s, a linear notation was developed.",
              "The following example defines a function max3 (in a linear transcription) that calculates the maximum of three variables:"
            ]
          },
          {
            "title": "Plankalk\u00fcl Programming Language: History, Origin, and More",
            "url": "https://history-computer.com/plankalkul-guide/",
            "content": [
              "Plankalk\u00fcl Programming Language: History, Origin, and More",
              "Trending Now: \u203a \u203a Plankalku\u0308l Programming Language: History, Origin, and More Updated: July 31, 2023 by History Computer Staff | Leave a comment Plankalku\u0308l is a programming language ideal for engineering purposes.",
              "The language was developed by Konrad Zuse, a German engineer and computer pioneer in the 1940s, and stood out as the first high-level computer programming language to be created.",
              "Basically, the name Plankalku\u0308l builds from the German term Kalku\u0308l, which means formal system.",
              "Therefore, Plankalku\u0308l stands for Formal System for planning.",
              "When Zuse created his Plankalku\u0308l language, the world was fighting the Second World War.",
              "At the time, everyone\u2019s focus was on the war, which made it hard for the language to gain attention and momentum.",
              "Due to that, the implementation of the programming language idea flopped, making it remain only on paper.",
              "Besides, Zuse himself had developed a Z3 computer during the same time and was busy commercializing it.",
              "Therefore, he put less effort into implementing the Plankalku\u0308l programming language, which contributed to its failure.",
              "Later on, John Backus came in with his Fortran programming language, which became the world\u2019s first-ever successful computer programming language to be widely used.",
              "Using modern programming terminology, Plankalku\u0308l is a typed high-level imperative programming language with the following main features: To use Plankalku\u0308l Programming Language, you need to know a few basics.",
              "To start with here is how to write Hello World in Plankalku\u0308l: R1.",
              "1(V0[:SIG]) => R0 R1.",
              "2(V0[:M X SIG]) => R0 0 => I | M + 1 => J [W [ I < J -> [ R1.",
              "1(V0[I: M X SIG]) => R0 | I + 1 => I ] ] ] END R1.",
              "3() => R0 \u2018H\u2019;",
              "\u2019E\u2019;",
              "\u2019L\u2019;",
              "\u2019L\u2019;",
              "\u2019O\u2019;",
              "\u2019,\u2019;",
              "\u2019 \u2018;",
              "\u2019W\u2019;",
              "\u2019O\u2019;",
              "\u2019R\u2019;",
              "\u2019L\u2019;",
              "\u2019D\u2019;",
              "\u2019!",
              "\u2019 => Z0[: M X SIG] R1.",
              "2(Z0) => R0 END Plankalku\u0308l uses a Boolean or single bit, which is the only primitive data type of the language.",
              "It is denoted by an identifier SO.",
              "Other composite data types are based on the primitive data type through records and arrays.",
              "Modern computing with an eight-bits sequence is denoted by 8 xSO.",
              "You can define the Boolean matrix as m x n xSO.",
              "The language also has identifiers for its variables.",
              "These are alphanumeric characters containing a number.",
              "They include: Subprograms and programs in Plankalku\u0308l are denoted with the letter P, followed by the program type, and later, subprogram, which is optional.",
              "For instance, p14, p6.",
              "8.",
              "This programming language also enables access to separate elements through a component index.",
              "The modern language describes it through a notation same as V0[0], V0[0][i], V0[0][i][j] Another vital part to understand in Plankalku\u0308l is the Two-dimensional syntax.",
              "Each Plankalku\u0308l instruction involves multiple rows for it to write.",
              "That\u2019s because the language writes indexes of variables vertically.",
              "In the first row, you get variable kind, followed by variable number denoted by the letter V, then variable indexes subcomponents marked K, and finally, variable type marked with S.",
              "How to Learn Plankalku\u0308l Even though the online materials for learning Plankalku\u0308l are limited, you can still benefit from the few tutorials and books available.",
              "If you don\u2019t know where to start, check out these materials: While Plankalku\u0308l was the first-ever high-level programming language to be developed for a computer, the ideas remained only on paper.",
              "That\u2019s because the world was fighting at the time, causing it not to attract much attention.",
              "On the other hand, Backus\u2019s Fortran became the first programming language to be commercially successful and used widely across the globe.",
              "Its success was attributed to the rising need for scientific and mathematical computations.",
              "Unlike Zuse\u2019s language, Backus\u2019s programming language gained acceptance, as it would replace manual hand-coding, which was tiresome and time-consuming.",
              "Regarding data types, Fortran delivers five essential data types;",
              "integer type, complex type, character type, logical type, and real type.",
              "On the contrary, Plankalku\u0308l has one primitive data type;",
              "a Boolean or single bit.",
              "All the other composite data types rely on the primitive through records and arrays.",
              "Konrad Zuse, a German engineer and computer pioneer, is the mind behind the famous Plankalku\u0308l computer programming language.",
              "The inventor also developed the first relay computer and its successors.",
              "When Zuse started developing computing machines, he was unaware of any other existing mechanical computing machines at the time.",
              "But later on, when building his Z3 computer, he was inspired by Hilbert\u2019s book on elementary mathematical logic.",
              "Zuse decided to invent his notation system and diagram to define logical circuits.",
              "He named his invention combinatorics of conditionals.",
              "In 1938, after developing his Z1 computer, Zuse found out that the calculus he had created already existed under the name proportional calculus.",
              "But what Zuse wanted was something more powerful.",
              "In 1939, the German inventor came up with an idea to develop something that later became Plankalku\u0308l.",
              "When it came to 1942, while handling his doctoral dissertation, Zuse invented his first formal algorithm notation system.",
              "The system could handle loops and branches.",
              "This Ph.",
              "D.",
              "dissertation is where Zuse initially described his Plankalku\u0308l language.",
              "In 1945, Zuse wrote an unpublished book describing his Plankalku\u0308l.",
              "Unfortunately, he didn\u2019t submit his manuscript following the collapse of Nazi Germany.",
              "During that time, only two computers were working in the entire world;",
              "Harvard Mark I and ENIAC.",
              "None of the two computers made use of a compiler.",
              "In fact, the only way to reprogram ENIAC for every task was to change the wire connections.",
              "The allied bombing in Germany in 1945 saw most of Zuse\u2019s computers destroyed.",
              "Luckily, he salvaged one computer, dubbed Z4, and took it to Hinterstein.",
              "Following an order by the allied powers forbidding the building of computers, Zuse remained with no choice but to devote his time to something else.",
              "For that reason, he started developing a high-level programming language model.",
              "The language was designed to create procedures, store code chunks to repeatedly revoke the codes for routine functions and structure data like database recording.",
              "Furthermore, the language had conditional statements for modification of program executions.",
              "In 1948, Zuse had an opportunity to publish his paper in the Archiv der Mathematik, and also gave a presentation about it at the GAMM\u2019s Annual General Meeting.",
              "Unfortunately, his work didn\u2019t attract much attention.",
              "When giving a lecture in 1957, Zuse was positive and expressed hope that his Plankalku\u0308l would someday come back to life.",
              "However, he was disappointed that ALGOL designers failed to acknowledge the positive impact of Plankalku\u0308l on their work.",
              "And finally, a comprehensive publication of the Plankalku\u0308l programming language happened in 1972.",
              "Even so, the implementation of its first compiler was done in 1995 by Joachim Hohmann in his dissertation paper.",
              "Thereafter, other independent applications took place in 1998 and then in 2000 at the University of Berlin.",
              "When Zuse created his Plankalku\u0308l language, the world was fighting the Second World War.",
              "At the time, everyone\u2019s focus was on the war, which made it hard for the language to gain attention and momentum.",
              "Due to that, the implementation of the programming language idea flopped, making it remain only on paper.",
              "The image featured at the top of this post is \u00a9Abubiju at German Wikipedia, Public domain, via Wikimedia Commons.",
              "What is Plankalku\u0308l?",
              "Plankalku\u0308l refers to a programming language developed by Konrad Zuse in 1940s.",
              "Initially, the language was designed for engineering purposes and was the first to be developed for a computer.",
              "Who invented the Plankalku\u0308 Programming Language?",
              "Konrad Zuse, a German engineer, and computer pioneer, is the mind behind Plankalku\u0308l Programming Language.",
              "He also developed the first relay computer.",
              "The inventor was born on 22 June 1910 in Berlin.",
              "When was the Plankalku\u0308l Programming Language created?",
              "The Plankalku\u0308l Programming Language came into existence in 1948.",
              "How was Plankalku\u0308l made?",
              "Zuse was working on his Ph.",
              "D.",
              "dissertation when he came up with his first formal algorithm notation system.",
              "Through that, the idea of Plankalku\u0308l grew, and he described it in his dissertation paper.",
              "What is the simplest data type of Plankalku\u0308l?",
              "There are very few Plankalku\u0308l datatypes available today.",
              "The only initial data type is a Boolean or single bit.",
              "What was Plankalku\u0308l used for?",
              "Plankalku\u0308l was initially developed for engineering purposes, but its implementation never happened.",
              "Your email address will not be published.",
              "Required fields are marked * Save my name, email, and website in this browser for the next time I comment.",
              "\u0394 This site uses Akismet to reduce spam.",
              "Learn how your comment data is processed.",
              "Related Articles Updated: July 31, 2023 by Abby 4 Facts About Fortran The name Fortran derives from the name Formula Translation.",
              "Initially, the spelling of the name was in all-uppercase [.",
              ".",
              ".]",
              "Updated: August 1, 2023 by History Computer Staff Key Points Although Zuse was a talented artist, he opted for studying civil engineering at the Technical College (Technischen Hochschule) in [.",
              ".",
              ".]",
              "Updated: October 21, 2023 by Duncan Dodsworth Key PointsAssembly Language was one of the first programming languages to be implemented and is still used today in niche [.",
              ".",
              ".]",
              "Tagged Updated: July 31, 2023 by Abby Key Points: Konrad Zuse is known for designing the S2 computing machine, one of the first electronic calculating machines that had [.",
              ".",
              ".]",
              "Updated: December 8, 2022 by Abby Key Points: Boolean logic strictly focuses on binary variables that typically come in 1s and 0s which represent \u201ctrue\u201d or \u201cfalse.",
              "\u201dWhere [.",
              ".",
              ".]",
              "Updated: July 31, 2023 by History Computer Staff The software industry is one of the largest and most influential industries in the world presently.",
              "It began as early [.",
              ".",
              ".]",
              "Updated: July 31, 2023 by Abby Key Points: George Stibitz was an American inventor and computer pioneer who is best known for his time at Bell Labs [.",
              ".",
              ".]",
              "Updated: August 1, 2023 by Abby What is JSON: Everything to Know 6 Facts about JSON According to its creator, JSON is pronounced like the name Jason.",
              "However, [.",
              ".",
              ".]",
              "Updated: July 28, 2023 by Abby Key Points: Originally, Von Neuman Architecture referred to the specific proposed architecture for a computer as stated by John von Neumann [.",
              ".",
              ".]",
              "Published: October 19, 2023 by David Beren For better or worse, computers have become an integral part of our daily lives, and imagining life without them almost [.",
              ".",
              ".]",
              "Tagged Updated: July 31, 2023 by History Computer Staff George Boole was a mathematician, philosopher, logician and author of The Laws of Thought among other books.",
              "Key Points: Boole created [.",
              ".",
              ".]",
              "Updated: July 25, 2023 by Abby Key Points: Shakey the Robot, built in the 1960\u2019s, was the first mobile robot able to perceive and reason about its [.",
              ".",
              ".]",
              "Updated: August 1, 2023 by History Computer Staff Key Points George\u2019s aptitude for science and engineering got him into Moraine Park, Dayton, an experimental high school established by Charles [.",
              ".",
              ".]",
              "Updated: December 2, 2022 by History Computer Staff Key Points: Fuzzy matching is basically when a computer, or program, tries to correctly determine the intent of an input [.",
              ".",
              ".]",
              "Updated: July 26, 2023 by History Computer Staff Key Points Emanuel Goldberg was a German scientist and inventor from the mid-1920s.",
              "He is most famous for advancing library automation with [.",
              ".",
              ".]",
              "Popular Articles What Channel Is Fox on AT&T U-Verse?",
              "3 weeks ago The 6 Best-Paying Tech Jobs in North Carolina 4 months ago How to Remove a Language or Restart Courses in Duolingo 2 months ago Bringing news and information about computers, people, inventions, & technology.",
              "As an Amazon Associate I earn from qualifying purchases.",
              "Learn more about us & read our affiliate disclosure."
            ]
          },
          {
            "title": "Plankalk\u00fcl | SpringerLink",
            "url": "https://link.springer.com/chapter/10.1007/978-3-031-39876-6_10",
            "content": [
              "Plankalk\u00fcl | SpringerLink",
              "Advertisement Konrad Zuse's Early Computers pp 155\u2013178Cite as 48 Accesses Part of the History of Computing book series (HC) This chapter describes the first implementation of Plankalku\u0308l, the programming symbolism invented by Konrad Zuse in 1945.",
              "Plankalku\u0308l is both a high-level imperative programming language and a logic specification notation.",
              "In Plankalku\u0308l, programs can define functions that can be called non-recursively in other programs. There are no preliminary variable declarations: the type of a variable is specified when it is used.",
              "The main imperative constructs are: variable assignment, arithmetic and logic operations, guarded commands, and While loops.",
              "Plankalku\u0308l is also declarative: some special list, set-theoretic, and logic functions are part of the language definition.",
              "Plankalku\u0308l uses a two-dimensional layout that defies traditional parsers.",
              "This and some inconsistencies in the original definition were the main obstacles to its implementation.",
              "This is a preview of subscription content, access via your institution.",
              "Tax calculation will be finalised at checkout Purchases are for personal use only This chapter is based on Rojas et al.",
              "(2000).",
              "Ansa\u0308tze einer Theorie des allgemeinen Rechnens unter besonderer Beru\u0308cksichtigung des Aussagenkalku\u0308ls und dessen Anwendung auf Relaisschaltungen Arefi, F.",
              ", Hughes, C.",
              "E.",
              ", and D.",
              "A.",
              "Workman.",
              "1990.",
              "Automatically generating visual syntax-directed editors.",
              "Communications of the ACM 33(3): 349\u2013360.",
              "https://doi.",
              "org/10.",
              "1145/77481.",
              "77487.",
              "CrossRef Google Scholar Bibel, W.",
              "2020.",
              "On the development of AI in Germany.",
              "Ku\u0308nstliche Intelligenz 34(2): 251\u2013258.",
              "https://doi.",
              "org/10.",
              "1007/s13218-020-00654-x.",
              "Open Access https://rdcu.",
              "be/b3oxS.",
              "Grosch, J.",
              ", and H.",
              "Emmelmann.",
              "1991.",
              "A tool box for compiler construction.",
              "In Compiler Compilers.",
              "CC 1990, ed.",
              "D Hammer.",
              "Lecture Notes in Computer Science, vol.",
              "477, 106\u2013116.",
              "Berlin, Heidelberg: Springer.",
              "https://doi.",
              "org/10.",
              "1007/3-540-53669-8-77.",
              "Rojas, R.",
              ", Go\u0308ktekin, C.",
              ", Friedland, G.",
              ", Kru\u0308ger, M.",
              ", Langmack, O.",
              ", and D.",
              "Kuni\u00df.",
              "2000.",
              "Plankalku\u0308l: The First High-Level Programming Language and its Implementation.",
              "Technical Report B-3/2000, Freie Universita\u0308t Berlin.",
              "Google Scholar Teitelbaum, T.",
              ", and T.",
              "Reps.",
              "1981.",
              "The cornell program synthesizer: A syntax directed programming environment.",
              "Communications of the ACM 24(9): 563\u2013573.",
              "https://doi.",
              "org/10.",
              "1145/358746.",
              "358755.",
              "CrossRef Google Scholar Zuse, K.",
              "1944e.",
              "Planfertigungsgera\u0308te.",
              "Deutsches Museum Digital.",
              "http://digital.",
              "deutsches-museum.",
              "de/item/NL-207-0220/.",
              "Zuse, K.",
              "1945.",
              "Theorie der Angewandten Logistik, 2.",
              "Buch.",
              "Deutsches Museum Digital.",
              "http://digital.",
              "deutsches-museum.",
              "de/item/NL-207-0233/.",
              "Zuse, K.",
              "1948.",
              "U\u0308ber den Plankalku\u0308l als Mittel zur Formulierung schematisch kombinativer Aufgaben.",
              "Archiv der Mathematik 1(6): 441\u2013449.",
              "CrossRef MathSciNet MATH Google Scholar Zuse, K.",
              "1972.",
              "Der Plankalku\u0308l, vol.",
              "63.",
              "Sankt Augustin: Berichte der Gesellschaft fu\u0308r Mathematik und Datenverarbeitung.",
              "Google Scholar Download references Nevada, USA Rau\u0301l Rojas You can also search for this author in PubMed Google Scholar Correspondence to Rau\u0301l Rojas .",
              "In the following, we adopt these conventions: a vertical bar (|) separates optional syntactical elements, {expr}* means that expr can be concatenated zero or more times, all identifiers with a defined rule can be expanded, any other characters are included literally in the expanded expressions.",
              "digit ::= 0 | 1 | 2 | .",
              ".",
              ".",
              "| 9 digits ::=digit {digit}\u2217 letter ::= a | b |.",
              ".",
              ".",
              "| A | B |.",
              ".",
              ".",
              "| Z type-letter ::= a | b | .",
              ".",
              ".",
              "h | j |.",
              ".",
              ".",
              "| A | B | .",
              ".",
              ".",
              "| Z identifier ::= letter {letter | digit}\u2217 pos-constant ::= digits neg-constant ::= - digits constant ::= pos-constant | neg-constant dot ::= \".\"",
              "comma ::= \",\" I.",
              "e.",
              "type-letter does not contain \u201ci\u201d.",
              "simple-type ::= 0 tuple-type ::= (type, type {comma type}\u2217) type ::= simple-type | tuple-type | digits dot type var-type ::= type-letter dot type all-type ::= type | var-type v-variable ::= V digits [component: type] | V digits[: all-type] z-variable ::= Z digits [component: type] | Z digits[: all-type] r-variable ::= R digits [component: type] | R digits[: all-type] loop-var ::= \"i\" | \"i\" digits loop-expr ::= loop-var | loop-var + pos-constant | loop-var - pos-constant type-var ::= type-letter type-expr ::= type-var | type-var + pos-constant | type-var - pos-constant | type-expr + type-expr | type-expr - type-expr component ::= digits | v-variable | z-variable | loop-expr | type-expr | component dot component zv-call-arg ::= v-variable | z-variable | call | constant | loop-var | type-var call-all ::= R digits [:type] ( zv-call-arg {,zv-call-arg}\u2217)| identifier [:type] ( zv-call-arg {,zv-call-arg}\u2217) call-one ::= R digits[component : type](zv-call-arg{,zv-call-arg}\u2217)| identifier[component : type](zv-call-arg{,zv-call-arg}\u2217) call ::= call-all | call-one arith-argument-left ::= v-variable | z-variable | constant | loop-var | type-var | call | arith-operation | (arith-operation) arith-argument-right ::= v-variable | z-variable | pos-constant | (neg-constant) | loop-var | type-var | call | arith-operation | (arith-operation) arith-argument ::= arith-argument-left | arith-argument-right arith-operation ::= arith-argument-left {+|-|x|/} arith-argument-right log-constant ::= + | - condition ::= arith-argument = arith-argument | arith-argument > arith-argument | arith-argument < arith-argument | zv-tuple = zv-tuple pos-literal ::= v-variable | z-variable | log-constant | call | condition | (condition) neg-literal ::= !",
              "v-variable | !",
              "z-variable | !",
              "call | !",
              "(condition) logic-argument ::= pos-literal | neg-literal | logic-operation | (logic-operation) logic-binary ::= logic-argument { \"|\" | & | ~ | /~} logic-argument logic-operation ::= pos-literal | neg-literal | logic-binary | !",
              "(logic-binary) assignment0 ::= arith-argument => {z-variable | r-variable} assignment1 ::= logic-argument => {z-variable | r-variable} assignment2 ::= zv-tuple => zr-tuple assignment3 ::= zv-tuple => {z-variable | r-variable} zv-tuple ::= ( zv-arg, zv-arg {comma zv-arg}\u2217) zv-arg ::= v-variable | z-variable | constant | call | loop-var | type-var | zv-tuple zr-tuple ::= ( zr-arg, zr-arg {comma zr-arg}\u2217) zr-arg ::= r-variable | z-variable | zr-tuple assignment ::= assignment0 | assignment1 | assignment2 | assignment 3 if-then ::= logic-argument -> statement block ::= [ statement{;",
              "statement}\u2217] while ::= w block | w [digits] block | w1 (arith-arg) block | w1[digits] (arith-arg) block built-ins ::= FIN | FIN digits statement ::= assignment | if-then | while | block | built-ins program ::= P digits randauszug {statement }\u2217 END randauszug ::= identifier v-tuple => r-tuple v-tuple ::= v-variable | (v-variable {, v-variable}\u2217) r-tuple ::= r-variable | (r-variable {, r-variable}\u2217) // The variables are numbered sequentially, starting with 0 // constant, indices, N(), have generic type Reprints and Permissions \u00a9 2023 The Author(s), under exclusive license to Springer Nature Switzerland AG Rojas, R.",
              "(2023).",
              "Plankalku\u0308l.",
              "In: Konrad Zuse's Early Computers.",
              "History of Computing.",
              "Springer, Cham.",
              "https://doi.",
              "org/10.",
              "1007/978-3-031-39876-6_10 DOI: https://doi.",
              "org/10.",
              "1007/978-3-031-39876-6_10 Published: 14 October 2023 Publisher Name: Springer, Cham Print ISBN: 978-3-031-39875-9 Online ISBN: 978-3-031-39876-6 eBook Packages: Computer ScienceComputer Science (R0) Anyone you share the following link with will be able to read this content: Sorry, a shareable link is not currently available for this article.",
              "Provided by the Springer Nature SharedIt content-sharing initiative Tax calculation will be finalised at checkout Purchases are for personal use only 205.",
              "172.",
              "168.",
              "145 University of Massachusetts Amherst W.",
              "E.",
              "B.",
              "Du Bois Library (8200177774) - North East Research Libraries (8200828607) \u00a9 2023 Springer Nature"
            ]
          }
        ],
        "Plankalk\u00fcl was inspired by mathematical logic and set theory.": [
          {
            "title": "Set theory - Wikipedia",
            "url": "https://en.wikipedia.org/wiki/Set_theory",
            "content": [
              "Set theory - Wikipedia",
              "Set theory is the branch of mathematical logic that studies sets, which can be informally described as collections of objects.",
              "Although objects of any kind can be collected into a set, set theory, as a branch of mathematics, is mostly concerned with those that are relevant to mathematics as a whole.",
              "The modern study of set theory was initiated by the German mathematicians Richard Dedekind and Georg Cantor in the 1870s.",
              "In particular, Georg Cantor is commonly considered the founder of set theory.",
              "The non-formalized systems investigated during this early stage go under the name of naive set theory.",
              "After the discovery of paradoxes within naive set theory (such as Russell's paradox, Cantor's paradox and the Burali-Forti paradox), various axiomatic systems were proposed in the early twentieth century, of which Zermelo\u2013Fraenkel set theory (with or without the axiom of choice) is still the best-known and most studied.",
              "Set theory is commonly employed as a foundational system for the whole of mathematics, particularly in the form of Zermelo\u2013Fraenkel set theory with the axiom of choice.",
              "[1] Besides its foundational role, set theory also provides the framework to develop a mathematical theory of infinity, and has various applications in computer science (such as in the theory of relational algebra), philosophy and formal semantics.",
              "Its foundational appeal, together with its paradoxes, its implications for the concept of infinity and its multiple applications, have made set theory an area of major interest for logicians and philosophers of mathematics.",
              "Contemporary research into set theory covers a vast array of topics, ranging from the structure of the real number line to the study of the consistency of large cardinals.",
              "Mathematical topics typically emerge and evolve through interactions among many researchers.",
              "Set theory, however, was founded by a single paper in 1874 by Georg Cantor: \"On a Property of the Collection of All Real Algebraic Numbers\".",
              "[2][3] Since the 5th century BC, beginning with Greek mathematician Zeno of Elea in the West and early Indian mathematicians in the East, mathematicians had struggled with the concept of infinity.",
              "Especially notable is the work of Bernard Bolzano in the first half of the 19th century.",
              "[4] Modern understanding of infinity began in 1870\u20131874, and was motivated by Cantor's work in real analysis.",
              "[5] An 1872 meeting between Cantor and Richard Dedekind influenced Cantor's thinking, and culminated in Cantor's 1874 paper.",
              "Cantor's work initially polarized the mathematicians of his day.",
              "While Karl Weierstrass and Dedekind supported Cantor, Leopold Kronecker, now seen as a founder of mathematical constructivism, did not.",
              "Cantorian set theory eventually became widespread, due to the utility of Cantorian concepts, such as one-to-one correspondence among sets, his proof that there are more real numbers than integers, and the \"infinity of infinities\" (\"Cantor's paradise\") resulting from the power set operation.",
              "This utility of set theory led to the article \"Mengenlehre\", contributed in 1898 by Arthur Schoenflies to Klein's encyclopedia.",
              "The next wave of excitement in set theory came around 1900, when it was discovered that some interpretations of Cantorian set theory gave rise to several contradictions, called antinomies or paradoxes.",
              "Bertrand Russell and Ernst Zermelo independently found the simplest and best known paradox, now called Russell's paradox: consider \"the set of all sets that are not members of themselves\", which leads to a contradiction since it must be a member of itself and not a member of itself.",
              "In 1899, Cantor had himself posed the question \"What is the cardinal number of the set of all sets?\"",
              ", and obtained a related paradox.",
              "Russell used his paradox as a theme in his 1903 review of continental mathematics in his The Principles of Mathematics.",
              "Rather than the term set, Russell used the term class, which has subsequently been used more technically.",
              "In 1906, the term set appeared in the book Theory of Sets of Points[6] by husband and wife William Henry Young and Grace Chisholm Young, published by Cambridge University Press.",
              "The momentum of set theory was such that debate on the paradoxes did not lead to its abandonment.",
              "The work of Zermelo in 1908 and the work of Abraham Fraenkel and Thoralf Skolem in 1922 resulted in the set of axioms ZFC, which became the most commonly used set of axioms for set theory.",
              "The work of analysts, such as that of Henri Lebesgue, demonstrated the great mathematical utility of set theory, which has since become woven into the fabric of modern mathematics.",
              "Set theory is commonly used as a foundational system, although in some areas\u2014such as algebraic geometry and algebraic topology\u2014category theory is thought to be a preferred foundation.",
              "Set theory begins with a fundamental binary relation between an object o and a set A.",
              "If o is a member (or element) of A, the notation o \u2208 A is used.",
              "A set is described by listing elements separated by commas, or by a characterizing property of its elements, within braces { }.",
              "[7] Since sets are objects, the membership relation can relate sets as well.",
              "A derived binary relation between two sets is the subset relation, also called set inclusion.",
              "If all the members of set A are also members of set B, then A is a subset of B, denoted A \u2286 B.",
              "For example, {1, 2} is a subset of {1, 2, 3}, and so is {2} but {1, 4} is not.",
              "As implied by this definition, a set is a subset of itself.",
              "For cases where this possibility is unsuitable or would make sense to be rejected, the term proper subset is defined.",
              "A is called a proper subset of B if and only if A is a subset of B, but A is not equal to B.",
              "Also, 1, 2, and 3 are members (elements) of the set {1, 2, 3}, but are not subsets of it;",
              "and in turn, the subsets, such as {1}, are not members of the set {1, 2, 3}.",
              "Just as arithmetic features binary operations on numbers, set theory features binary operations on sets.",
              "[8] The following is a partial list of them: Some basic sets of central importance are the set of natural numbers, the set of real numbers and the empty set\u2014the unique set containing no elements.",
              "The empty set is also occasionally called the null set,[10] though this name is ambiguous and can lead to several interpretations.",
              "A set is pure if all of its members are sets, all members of its members are sets, and so on.",
              "For example, the set containing only the empty set is a nonempty pure set.",
              "In modern set theory, it is common to restrict attention to the von Neumann universe of pure sets, and many systems of axiomatic set theory are designed to axiomatize the pure sets only.",
              "There are many technical advantages to this restriction, and little generality is lost, because essentially all mathematical concepts can be modeled by pure sets.",
              "Sets in the von Neumann universe are organized into a cumulative hierarchy, based on how deeply their members, members of members, etc.",
              "are nested.",
              "Each set in this hierarchy is assigned (by transfinite recursion) an ordinal number \u03b1 {\\displaystyle \\alpha } , known as its rank.",
              "The rank of a pure set X {\\displaystyle X} is defined to be the least ordinal that is strictly greater than the rank of any of its elements.",
              "For example, the empty set is assigned rank 0, while the set {{}} containing only the empty set is assigned rank 1.",
              "For each ordinal \u03b1 {\\displaystyle \\alpha } , the set V \u03b1 {\\displaystyle V_{\\alpha }} is defined to consist of all pure sets with rank less than \u03b1 {\\displaystyle \\alpha } .",
              "The entire von Neumann universe is denoted V {\\displaystyle V} .",
              "Elementary set theory can be studied informally and intuitively, and so can be taught in primary schools using Venn diagrams. The intuitive approach tacitly assumes that a set may be formed from the class of all objects satisfying any particular defining condition.",
              "This assumption gives rise to paradoxes, the simplest and best known of which are Russell's paradox and the Burali-Forti paradox.",
              "Axiomatic set theory was originally devised to rid set theory of such paradoxes.",
              "[note 1] The most widely studied systems of axiomatic set theory imply that all sets form a cumulative hierarchy.",
              "Such systems come in two flavors, those whose ontology consists of: The above systems can be modified to allow urelements, objects that can be members of sets but that are not themselves sets and do not have any members.",
              "The New Foundations systems of NFU (allowing urelements) and NF (lacking them), associate with Willard Van Orman Quine, are not based on a cumulative hierarchy.",
              "NF and NFU include a \"set of everything\", relative to which every set has a complement.",
              "In these systems urelements matter, because NF, but not NFU, produces sets for which the axiom of choice does not hold.",
              "Despite NF's ontology not reflecting the traditional cumulative hierarchy and violating well-foundedness, Thomas Forster has argued that it does reflect an iterative conception of set.",
              "[11] Systems of constructive set theory, such as CST, CZF, and IZF, embed their set axioms in intuitionistic instead of classical logic.",
              "Yet other systems accept classical logic but feature a nonstandard membership relation.",
              "These include rough set theory and fuzzy set theory, in which the value of an atomic formula embodying the membership relation is not simply True or False.",
              "The Boolean-valued models of ZFC are a related subject.",
              "An enrichment of ZFC called internal set theory was proposed by Edward Nelson in 1977.",
              "[12] Many mathematical concepts can be defined precisely using only set theoretic concepts.",
              "For example, mathematical structures as diverse as graphs, manifolds, rings, vector spaces, and relational algebras can all be defined as sets satisfying various (axiomatic) properties.",
              "Equivalence and order relations are ubiquitous in mathematics, and the theory of mathematical relations can be described in set theory.",
              "[13][14] Set theory is also a promising foundational system for much of mathematics.",
              "Since the publication of the first volume of Principia Mathematica, it has been claimed that most (or even all) mathematical theorems can be derived using an aptly designed set of axioms for set theory, augmented with many definitions, using first or second-order logic.",
              "For example, properties of the natural and real numbers can be derived within set theory, as each number system can be identified with a set of equivalence classes under a suitable equivalence relation whose field is some infinite set.",
              "[citation needed] Set theory as a foundation for mathematical analysis, topology, abstract algebra, and discrete mathematics is likewise uncontroversial;",
              "mathematicians accept (in principle) that theorems in these areas can be derived from the relevant definitions and the axioms of set theory.",
              "However, it remains that few full derivations of complex mathematical theorems from set theory have been formally verified, since such formal derivations are often much longer than the natural language proofs mathematicians commonly present.",
              "One verification project, Metamath, includes human-written, computer-verified derivations of more than 12,000 theorems starting from ZFC set theory, first-order logic and propositional logic.",
              "[15] Set theory is a major area of research in mathematics, with many interrelated subfields.",
              "Combinatorial set theory concerns extensions of finite combinatorics to infinite sets.",
              "This includes the study of cardinal arithmetic and the study of extensions of Ramsey's theorem such as the Erdo\u030bs\u2013Rado theorem.",
              "Descriptive set theory is the study of subsets of the real line and, more generally, subsets of Polish spaces.",
              "It begins with the study of pointclasses in the Borel hierarchy and extends to the study of more complex hierarchies such as the projective hierarchy and the Wadge hierarchy.",
              "Many properties of Borel sets can be established in ZFC, but proving these properties hold for more complicated sets requires additional axioms related to determinacy and large cardinals.",
              "The field of effective descriptive set theory is between set theory and recursion theory.",
              "It includes the study of lightface pointclasses, and is closely related to hyperarithmetical theory.",
              "In many cases, results of classical descriptive set theory have effective versions;",
              "in some cases, new results are obtained by proving the effective version first and then extending (\"relativizing\") it to make it more broadly applicable.",
              "A recent area of research concerns Borel equivalence relations and more complicated definable equivalence relations.",
              "This has important applications to the study of invariants in many fields of mathematics.",
              "In set theory as Cantor defined and Zermelo and Fraenkel axiomatized, an object is either a member of a set or not.",
              "In fuzzy set theory this condition was relaxed by Lotfi A.",
              "Zadeh so an object has a degree of membership in a set, a number between 0 and 1.",
              "For example, the degree of membership of a person in the set of \"tall people\" is more flexible than a simple yes or no answer and can be a real number such as 0.",
              "75.",
              "An inner model of Zermelo\u2013Fraenkel set theory (ZF) is a transitive class that includes all the ordinals and satisfies all the axioms of ZF.",
              "The canonical example is the constructible universe L developed by Go\u0308del.",
              "One reason that the study of inner models is of interest is that it can be used to prove consistency results.",
              "For example, it can be shown that regardless of whether a model V of ZF satisfies the continuum hypothesis or the axiom of choice, the inner model L constructed inside the original model will satisfy both the generalized continuum hypothesis and the axiom of choice.",
              "Thus the assumption that ZF is consistent (has at least one model) implies that ZF together with these two principles is consistent.",
              "The study of inner models is common in the study of determinacy and large cardinals, especially when considering axioms such as the axiom of determinacy that contradict the axiom of choice.",
              "Even if a fixed model of set theory satisfies the axiom of choice, it is possible for an inner model to fail to satisfy the axiom of choice.",
              "For example, the existence of sufficiently large cardinals implies that there is an inner model satisfying the axiom of determinacy (and thus not satisfying the axiom of choice).",
              "[16] A large cardinal is a cardinal number with an extra property.",
              "Many such properties are studied, including inaccessible cardinals, measurable cardinals, and many more.",
              "These properties typically imply the cardinal number must be very large, with the existence of a cardinal with the specified property unprovable in Zermelo\u2013Fraenkel set theory.",
              "Determinacy refers to the fact that, under appropriate assumptions, certain two-player games of perfect information are determined from the start in the sense that one player must have a winning strategy.",
              "The existence of these strategies has important consequences in descriptive set theory, as the assumption that a broader class of games is determined often implies that a broader class of sets will have a topological property.",
              "The axiom of determinacy (AD) is an important object of study;",
              "although incompatible with the axiom of choice, AD implies that all subsets of the real line are well behaved (in particular, measurable and with the perfect set property).",
              "AD can be used to prove that the Wadge degrees have an elegant structure.",
              "Paul Cohen invented the method of forcing while searching for a model of ZFC in which the continuum hypothesis fails, or a model of ZF in which the axiom of choice fails.",
              "Forcing adjoins to some given model of set theory additional sets in order to create a larger model with properties determined (i.",
              "e. \"forced\") by the construction and the original model.",
              "For example, Cohen's construction adjoins additional subsets of the natural numbers without changing any of the cardinal numbers of the original model.",
              "Forcing is also one of two methods for proving relative consistency by finitistic methods, the other method being Boolean-valued models.",
              "A cardinal invariant is a property of the real line measured by a cardinal number.",
              "For example, a well-studied invariant is the smallest cardinality of a collection of meagre sets of reals whose union is the entire real line.",
              "These are invariants in the sense that any two isomorphic models of set theory must give the same cardinal for each invariant.",
              "Many cardinal invariants have been studied, and the relationships between them are often complex and related to axioms of set theory.",
              "Set-theoretic topology studies questions of general topology that are set-theoretic in nature or that require advanced methods of set theory for their solution.",
              "Many of these theorems are independent of ZFC, requiring stronger axioms for their proof.",
              "A famous problem is the normal Moore space question, a question in general topology that was the subject of intense research.",
              "The answer to the normal Moore space question was eventually proved to be independent of ZFC.",
              "From set theory's inception, some mathematicians have objected to it as a foundation for mathematics: see Controversy over Cantor's theory.",
              "The most common objection to set theory, one Kronecker voiced in set theory's earliest years, starts from the constructivist view that mathematics is loosely related to computation.",
              "If this view is granted, then the treatment of infinite sets, both in naive and in axiomatic set theory, introduces into mathematics methods and objects that are not computable even in principle.",
              "The feasibility of constructivism as a substitute foundation for mathematics was greatly increased by Errett Bishop's influential book Foundations of Constructive Analysis.",
              "[17] A different objection put forth by Henri Poincare\u0301 is that defining sets using the axiom schemas of specification and replacement, as well as the axiom of power set, introduces impredicativity, a type of circularity, into the definitions of mathematical objects.",
              "The scope of predicatively founded mathematics, while less than that of the commonly accepted Zermelo\u2013Fraenkel theory, is much greater than that of constructive mathematics, to the point that Solomon Feferman has said that \"all of scientifically applicable analysis can be developed [using predicative methods]\".",
              "[18] Ludwig Wittgenstein condemned set theory philosophically for its connotations of mathematical platonism.",
              "[19] He wrote that \"set theory is wrong\", since it builds on the \"nonsense\" of fictitious symbolism, has \"pernicious idioms\", and that it is nonsensical to talk about \"all numbers\".",
              "[20] Wittgenstein identified mathematics with algorithmic human deduction;",
              "[21] the need for a secure foundation for mathematics seemed, to him, nonsensical.",
              "[22] Moreover, since human effort is necessarily finite, Wittgenstein's philosophy required an ontological commitment to radical constructivism and finitism.",
              "Meta-mathematical statements \u2014 which, for Wittgenstein, included any statement quantifying over infinite domains, and thus almost all modern set theory \u2014 are not mathematics.",
              "[23] Few modern philosophers have adopted Wittgenstein's views after a spectacular blunder in Remarks on the Foundations of Mathematics: Wittgenstein attempted to refute Go\u0308del's incompleteness theorems after having only read the abstract.",
              "As reviewers Kreisel, Bernays, Dummett, and Goodstein all pointed out, many of his critiques did not apply to the paper in full.",
              "Only recently have philosophers such as Crispin Wright begun to rehabilitate Wittgenstein's arguments.",
              "[24] Category theorists have proposed topos theory as an alternative to traditional axiomatic set theory.",
              "Topos theory can interpret various alternatives to that theory, such as constructivism, finite set theory, and computable set theory.",
              "[25][26] Topoi also give a natural setting for forcing and discussions of the independence of choice from ZF, as well as providing the framework for pointless topology and Stone spaces.",
              "[27] An active area of research is the univalent foundations and related to it homotopy type theory.",
              "Within homotopy type theory, a set may be regarded as a homotopy 0-type, with universal properties of sets arising from the inductive and recursive properties of higher inductive types.",
              "Principles such as the axiom of choice and the law of the excluded middle can be formulated in a manner corresponding to the classical formulation in set theory or perhaps in a spectrum of distinct ways unique to type theory.",
              "Some of these principles may be proven to be a consequence of other principles.",
              "The variety of formulations of these axiomatic principles allows for a detailed analysis of the formulations required in order to derive various mathematical results.",
              "[28][29] As set theory gained popularity as a foundation for modern mathematics, there has been support for the idea of introducing the basics of naive set theory early in mathematics education.",
              "In the US in the 1960s, the New Math experiment aimed to teach basic set theory, among other abstract concepts, to primary school students, but was met with much criticism.",
              "The math syllabus in European schools followed this trend, and currently includes the subject at different levels in all grades.",
              "Venn diagrams are widely employed to explain basic set-theoretic relationships to primary school students (even though John Venn originally devised them as part of a procedure to assess the validity of inferences in term logic).",
              "Set theory is used to introduce students to logical operators (NOT, AND, OR), and semantic or rule description (technically intensional definition[30]) of sets (e.",
              "g. \"months starting with the letter A\"), which may be useful when learning computer programming, since Boolean logic is used in various programming languages.",
              "Likewise, sets and other collection-like objects, such as multisets and lists, are common datatypes in computer science and programming.",
              "In addition to that, sets are commonly referred to in mathematical teaching when talking about different types of numbers (the sets N {\\displaystyle \\mathbb {N} } of natural numbers, Z {\\displaystyle \\mathbb {Z} } of integers, R {\\displaystyle \\mathbb {R} } of real numbers, etc.)",
              ", and when defining a mathematical function as a relation from one set (the domain) to another set (the range)."
            ]
          },
          {
            "title": "Notes on Logic and Set Theory - Cambridge University Press &amp; Assessment",
            "url": "https://www.cambridge.org/us/universitypress/subjects/mathematics/logic-categories-and-sets/notes-logic-and-set-theory",
            "content": [
              "Notes on Logic and Set Theory - Cambridge University Press &amp; Assessment",
              "Maintenance to the cambridge.",
              "org website is scheduled for 13 November at 6am \u2013 9am GMT.",
              "The site will be unavailable during this time.",
              "Purchasing will also be unavailable 11 November 5pm GMT \u2013 12 November 3am GMT.",
              "For purchasing or other enquiries during these times, please contact your local Customer Services team.",
              "UK/ROW directcs@cambridge.",
              "org +44 (0) 1223 326050 | US customer_service@cambridge.",
              "org 1 800 872 7423 or 1 212 337 5000 | Australia/New Zealand enquiries@cambridge.",
              "edu.",
              "au 61 3 86711400 or 1800 005 210, New Zealand 0800 023 520 To register on our site and for the best user experience, please enable Javascript in your browser using these instructions.",
              "Our innovative products and services for learners, authors and customers are based on world-class research and are relevant, exciting and inspiring.",
              "We unlock the potential of millions of people worldwide.",
              "Our assessments, publications and research spread knowledge, spark enquiry and aid understanding around the world.",
              "No matter who you are, what you do, or where you come from, you\u2019ll feel proud to work here.",
              "I want this title to be available as an eBook Instructors may request a copy of this title for examination Request A succinct introduction to mathematical logic and set theory, which together form the foundations for the rigorous development of mathematics.",
              "Suitable for all introductory mathematics undergraduates, Notes on Logic and Set Theory covers the basic concepts of logic: first-order logic, consistency, and the completeness theorem, before introducing the reader to the fundamentals of axiomatic set theory.",
              "Successive chapters examine the recursive functions, the axiom of choice, ordinal and cardinal arithmetic, and the incompleteness theorems. Dr.",
              "Johnstone has included numerous exercises designed to illustrate the key elements of the theory and to provide applications of basic logical concepts to other areas of mathematics.",
              "Be the first to review Review was not posted due to profanity (If you're not , sign out) Preface 1.",
              "Universal algebra 2.",
              "Propositional calculus 3.",
              "First-order theories 4.",
              "Recursive functions 5.",
              "Zermelo - Fraenkel set theory 6.",
              "Ordinals and well -orderings 7.",
              "The axiom of choice 8.",
              "Cardinal arithmetic 9.",
              "Consistency and independence Index of definitions Index of names.",
              "P.",
              "T.",
              "Johnstone, University of Cambridge Proceedings of the London Mathematical Society Symposium, Durham 1991 The Cabal Seminar, Volume III The Review of Symbolic Logic is designed to cultivate research on theborders of logic, philosophy, and the sciences,.",
              ".",
              ".",
              "Proceedings of the London Mathematical Society Symposium, Durham 1991 Please register or sign in to request access.",
              "If you are having problems accessing these resources please email lecturers@cambridge.",
              "org You are now leaving the Cambridge University Press website.",
              "Your eBook purchase and download will be completed by our partner www.",
              "ebooks.",
              "com.",
              "Please see the permission section of the www.",
              "ebooks.",
              "com catalogue page for details of the print & copy limits on our eBooks.",
              "You must be signed in to your Cambridge account to turn product stock notifications on or off.",
              "Receive email alerts on new books, offers and news.",
              ".",
              ".",
              "\u00a9 2023 Cambridge University Press & Assessment This cannot be undone.",
              "Thank you for your feedback which will help us improve our service.",
              "If you requested a response, we will make sure to get back to you shortly."
            ]
          }
        ],
        "The first high-level programming language was Short Code.": [
          {
            "title": "History of programming languages - Wikipedia",
            "url": "https://en.wikipedia.org/wiki/History_of_programming_languages",
            "content": [
              "History of programming languages - Wikipedia",
              "The history of programming languages spans from documentation of early mechanical computers to modern tools for software development.",
              "Early programming languages were highly specialized, relying on mathematical notation and similarly obscure syntax.",
              "[1] Throughout the 20th century, research in compiler theory led to the creation of high-level programming languages, which use a more accessible syntax to communicate instructions.",
              "The first high-level programming language was Plankalku\u0308l, created by Konrad Zuse between 1942 and 1945.",
              "[2] The first high-level language to have an associated compiler was created by Corrado Bo\u0308hm in 1951, for his PhD thesis.",
              "[3] The first commercially available language was FORTRAN (FORmula TRANslation), developed in 1956 (first manual appeared in 1956, but first developed in 1954) by a team led by John Backus at IBM.",
              "During 1842\u20131849, Ada Lovelace translated the memoir of Italian mathematician Luigi Menabrea about Charles Babbage's newest proposed machine: the Analytical Engine;",
              "she supplemented the memoir with notes that specified in detail a method for calculating Bernoulli numbers with the engine, recognized by most of historians as the world's first published computer program.",
              "[4] The first computer codes were specialized for their applications: e.",
              "g., Alonzo Church was able to express the lambda calculus in a formulaic way and the Turing machine was an abstraction of the operation of a tape-marking machine.",
              "Jacquard Looms and Charles Babbage's Difference Engine both had simple languages[citation needed] for describing the actions that these machines should perform hence they were the creators of the first programming language.",
              "In the 1940s, the first recognizably modern electrically powered computers were created.",
              "The limited speed and memory capacity forced programmers to write hand-tuned assembly language programs. It was eventually realized that programming in assembly language required a great deal of intellectual effort.",
              "[citation needed] An early proposal for a high-level programming language was Plankalku\u0308l, developed by Konrad Zuse for his Z1 computer between 1942 and 1945 but not implemented at the time.",
              "[5] The first functioning programming languages designed to communicate instructions to a computer were written in the early 1950s.",
              "John Mauchly's Short Code, proposed in 1949, was one of the first high-level languages ever developed for an electronic computer.",
              "[6] Unlike machine code, Short Code statements represented mathematical expressions in understandable form.",
              "However, the program had to be interpreted into machine code every time it ran, making the process much slower than running the equivalent machine code.",
              "In the early 1950s, Alick Glennie developed Autocode, possibly the first compiled programming language, at the University of Manchester.",
              "In 1954, a second iteration of the language, known as the \"Mark 1 Autocode,\" was developed for the Mark 1 by R.",
              "A.",
              "Brooker.",
              "Brooker, with the University of Manchester, also developed an autocode for the Ferranti Mercury in the 1950s.",
              "The version for the EDSAC 2 was devised by Douglas Hartree of University of Cambridge Mathematical Laboratory in 1961.",
              "Known as EDSAC 2 Autocode, it was a straight development from Mercury Autocode adapted for local circumstances and was noted for its object code optimization and source-language diagnostics which were advanced for the time.",
              "A contemporary but separate thread of development, Atlas Autocode was developed for the University of Manchester Atlas 1 machine.",
              "In 1954, FORTRAN was invented at IBM by a team led by John Backus;",
              "it was the first widely used high-level general purpose language to have a functional implementation, in contrast to only a design on paper.",
              "[7][8] When FORTRAN was first introduced, it was viewed with skepticism due to bugs, delays in development, and the comparative efficiency of \"hand-coded\" programs written in assembly.",
              "[9] However, in a hardware market that was rapidly evolving;",
              "the language eventually became known for its efficiency.",
              "It is still a popular language for high-performance computing[10] and is used for programs that benchmark and rank the world's TOP500 fastest supercomputers.",
              "[11] Another early programming language was devised by Grace Hopper in the US, named FLOW-MATIC.",
              "It was developed for the UNIVAC I at Remington Rand during the period from 1955 until 1959.",
              "Hopper found that business data processing customers were uncomfortable with mathematical notation, and in early 1955, she and her team wrote a specification for an English language programming language and implemented a prototype.",
              "[12] The FLOW-MATIC compiler became publicly available in early 1958 and was substantially complete in 1959.",
              "[13] Flow-Matic was a major influence in the design of COBOL, since only it and its direct descendant AIMACO were in use at the time.",
              "[14] Other languages still in use today include LISP (1958), invented by John McCarthy and COBOL (1959), created by the Short Range Committee.",
              "Another milestone in the late 1950s was the publication, by a committee of American and European computer scientists, of \"a new language for algorithms\";",
              "the ALGOL 60 Report (the \"ALGOrithmic Language\").",
              "This report consolidated many ideas circulating at the time and featured three key language innovations: Another innovation, related to this, was in how the language was described: ALGOL 60 was particularly influential in the design of later languages, some of which soon became more popular.",
              "The Burroughs large systems were designed to be programmed in an extended subset of ALGOL.",
              "ALGOL's key ideas were continued, producing ALGOL 68: ALGOL 68's many little-used language features (for example, concurrent and parallel blocks) and its complex system of syntactic shortcuts and automatic type coercions made it unpopular with implementers and gained it a reputation of being difficult.",
              "Niklaus Wirth actually walked out of the design committee to create the simpler Pascal language.",
              "Some notable languages that were developed in this period include: The period from the late 1960s to the late 1970s brought a major flowering of programming languages.",
              "Most of the major language paradigms now in use were invented in this period:[original research?]",
              "The 1960s and 1970s also saw considerable debate over the merits of \"structured programming\", which essentially meant programming without the use of goto.",
              "A significant fraction of programmers believed that, even in languages that provide goto, it is bad programming style to use it except in rare circumstances.",
              "This debate was closely related to language design: some languages had no goto, which forced the use of structured programming.",
              "To provide even faster compile times, some languages were structured for \"one-pass compilers\" which expect subordinate routines to be defined first, as with Pascal, where the main routine, or driver function, is the final section of the program listing.",
              "Some notable languages that were developed in this period include: The 1980s were years of relative consolidation in imperative languages.",
              "Rather than inventing new paradigms, all of these movements elaborated upon the ideas invented in the previous decade.",
              "C++ combined object-oriented and systems programming.",
              "The United States government standardized Ada, a systems programming language intended for use by defense contractors.",
              "In Japan and elsewhere, vast sums were spent investigating so-called fifth-generation programming languages that incorporated logic programming constructs.",
              "The functional languages community moved to standardize ML and Lisp.",
              "Research in Miranda, a functional language with lazy evaluation, began to take hold in this decade.",
              "One important new trend in language design was an increased focus on programming for large-scale systems through the use of modules, or large-scale organizational units of code.",
              "Modula, Ada, and ML all developed notable module systems in the 1980s.",
              "Module systems were often wedded to generic programming constructs: generics being, in essence, parametrized modules[citation needed] (see also polymorphism in object-oriented programming).",
              "Although major new paradigms for imperative programming languages did not appear, many researchers expanded on the ideas of prior languages and adapted them to new contexts.",
              "For example, the languages of the Argus and Emerald systems adapted object-oriented programming to distributed computing systems. The 1980s also brought advances in programming language implementation.",
              "The reduced instruction set computer (RISC) movement in computer architecture postulated that hardware should be designed for compilers rather than for human assembly programmers.",
              "Aided by central processing unit (CPU) speed improvements that enabled increasingly aggressive compiling methods, the RISC movement sparked greater interest in compiler technology for high-level languages.",
              "Language technology continued along these lines well into the 1990s.",
              "Some notable languages that were developed in this period include: The rapid growth of the Internet in the mid-1990s was the next major historic event in programming languages.",
              "By opening up a radically new platform for computer systems, the Internet created an opportunity for new languages to be adopted.",
              "In particular, the JavaScript programming language rose to popularity because of its early integration with the Netscape Navigator web browser.",
              "Various other scripting languages achieved widespread use in developing customized applications for web servers such as PHP.",
              "The 1990s saw no fundamental novelty in imperative languages, but much recombination and maturation of old ideas.",
              "This era began the spread of functional languages.",
              "A big driving philosophy was programmer productivity.",
              "Many rapid application development (RAD) languages emerged, which usually came with an integrated development environment (IDE), garbage collection, and were descendants of older languages.",
              "All such languages were object-oriented.",
              "These included Object Pascal, Objective Caml (renamed OCaml), Visual Basic, and Java.",
              "Java in particular received much attention.",
              "More radical and innovative than the RAD languages were the new scripting languages.",
              "These did not directly descend from other languages and featured new syntaxes and more liberal incorporation of features.",
              "Many consider these scripting languages to be more productive than even the RAD languages, but often because of choices that make small programs simpler but large programs more difficult to write and maintain.",
              "[citation needed] Nevertheless, scripting languages came to be the most prominent ones used in connection with the Web.",
              "Some notable languages that were developed in this period include: Programming language evolution continues, in both industry and research.",
              "Some of the recent trends have included: Some notable languages developed during this period include:[17][18] Other new programming languages include Red, Crystal, Hack, Haxe, Zig, and Reason.",
              "Some key people who helped develop programming languages:"
            ]
          },
          {
            "title": "Short Code (computer language) - Wikipedia",
            "url": "https://en.wikipedia.org/wiki/Short_Code_(computer_language)",
            "content": [
              "Short Code (computer language) - Wikipedia",
              "Short Code was one of the first higher-level languages developed for an electronic computer.",
              "[1] Unlike machine code, Short Code statements represented mathematic expressions rather than a machine instruction.",
              "Also known as an automatic programming, the source code was not compiled but executed through an interpreter to simplify the programming process;",
              "the execution time was much slower though.",
              "[2] Short Code was proposed by John Mauchly in 1949 and originally known as Brief Code.",
              "William Schmitt implemented a version of Brief Code in 1949 for the BINAC computer, though it was never debugged and tested.",
              "The following year Schmitt implemented a new version of Brief Code for the UNIVAC I, where it was now known as Short Code (also Short Order Code).",
              "A revised version of Short Code was developed in 1952 for the Univac II by A.",
              "B.",
              "Tonik and J.",
              "R.",
              "Logan.",
              "[3] While Short Code represented expressions, the representation itself was not direct and required a process of manual conversion.",
              "Elements of an expression were represented by two-character codes and then divided into 6-code groups in order to conform to the 12-byte words used by BINAC and Univac computers.",
              "[4] For example, the expression was converted to Short Code by a sequence of substitutions and a final regrouping: Along with basic arithmetic, Short Code allowed for branching and calls to a library of functions.",
              "The language was interpreted and ran about 50 times slower than machine code.",
              "[5]"
            ]
          },
          {
            "title": "What Was the First Computer Programming Language?",
            "url": "https://www.computerhope.com/issues/ch001621.htm",
            "content": [
              "What Was the First Computer Programming Language?",
              "Officially, the first programming language for a computer was Plankalku\u0308l, developed by Konrad Zuse for the Z3 between 1943 and 1945.",
              "However, it was not implemented until 1998.",
              "Short Code, proposed by John Mauchly in 1949, is considered the first high-level programming language.",
              "It was designed to represent mathematical expressions in a format readable by human beings.",
              "However, because it had to be translated into machine code before being executed, it had relatively slow processing speeds.",
              "Other early programming languages were developed in the 1950s and 1960s, including Autocode, COBOL (Common Business Oriented Language), FLOW-MATIC, and LISP (list processor).",
              "Of these, only COBOL and LISP are still in use today.",
              "Ada Lovelace is considered the first programmer, but she did not use the first programming language."
            ]
          }
        ],
        "Short Code was proposed by John Mauchly in 1949.": [
          {
            "title": "Short Code (computer language) - Wikipedia",
            "url": "https://en.wikipedia.org/wiki/Short_Code_(computer_language)",
            "content": [
              "Short Code (computer language) - Wikipedia",
              "Short Code was one of the first higher-level languages developed for an electronic computer.",
              "[1] Unlike machine code, Short Code statements represented mathematic expressions rather than a machine instruction.",
              "Also known as an automatic programming, the source code was not compiled but executed through an interpreter to simplify the programming process;",
              "the execution time was much slower though.",
              "[2] Short Code was proposed by John Mauchly in 1949 and originally known as Brief Code.",
              "William Schmitt implemented a version of Brief Code in 1949 for the BINAC computer, though it was never debugged and tested.",
              "The following year Schmitt implemented a new version of Brief Code for the UNIVAC I, where it was now known as Short Code (also Short Order Code).",
              "A revised version of Short Code was developed in 1952 for the Univac II by A.",
              "B.",
              "Tonik and J.",
              "R.",
              "Logan.",
              "[3] While Short Code represented expressions, the representation itself was not direct and required a process of manual conversion.",
              "Elements of an expression were represented by two-character codes and then divided into 6-code groups in order to conform to the 12-byte words used by BINAC and Univac computers.",
              "[4] For example, the expression was converted to Short Code by a sequence of substitutions and a final regrouping: Along with basic arithmetic, Short Code allowed for branching and calls to a library of functions.",
              "The language was interpreted and ran about 50 times slower than machine code.",
              "[5]"
            ]
          },
          {
            "title": "The UNIVAC SHORT CODE | IEEE Journals &amp; Magazine | IEEE Xplore",
            "url": "https://ieeexplore.ieee.org/document/4640530",
            "content": [
              "The UNIVAC SHORT CODE | IEEE Journals &amp; Magazine | IEEE Xplore",
              "A not-for-profit organization, IEEE is the world's largest technical professional organization dedicated to advancing technology for the benefit of humanity.",
              "\u00a9 Copyright 2023 IEEE - All rights reserved.",
              "Use of this web site signifies your agreement to the terms and conditions."
            ]
          },
          {
            "title": "The UNIVAC SHORT CODE | IEEE Annals of the History of Computing",
            "url": "https://dl.acm.org/doi/10.1109/MAHC.1988.10004",
            "content": [
              "The UNIVAC SHORT CODE | IEEE Annals of the History of Computing",
              "Temple Univ.",
              ", Philadelphia, PA Temple Univ.",
              ", Philadelphia, PA This alert has been successfully added and will be sent to: You will be notified whenever a record that you have chosen has been cited.",
              "To manage your alert preferences, click on the button below.",
              "Please log in to your account The UNIVAC SHORT CODE, the first example of a high level programming language actually intended to be used with an electronic computer was proposed by John W.",
              "Mauchly in July 1949.",
              "SHORT CODE was implemented as an interpreter by W.",
              "F.",
              "Schmitt and was first run on UNIVAC I Serial 1 in 1950.",
              "A revised version prepared in 1952 by A.",
              "B.",
              "Tonik and J.",
              "R.",
              "Logan still exists and is described with some examples.",
              "Some of Mauchly's thoughts on programming at that time are set forth in a previously unpublished fragment attached as an appendix.",
              "Social and professional topics Professional topics History of computing Historical people History of software Software and its engineering Software notations and tools Compilers Interpreters Source code generation In these anecdotes, the author reminisces about his entry into the computer field during Univac's early days, specifically those in Philadelphia, where computer pioneers such as Grace Hopper and John Mauchly were making history before anyone ever heard .",
              ".",
              ".",
              "UNIVAC I (Universal Automatic Computer) was the first commercially available computer in the USA.",
              "Work on the prototype was begun by the Eckert--Mauchly Computer Corporation in 1948 and completed in 1951, when it was delivered to the US Bureau of the .",
              ".",
              ".",
              "When it made successful use of magnetic tape, the Univac I pioneered the way for federal and commercial applications with extensive files.",
              "But pioneering posed many challenges because technologybarely supported the production and introduction of .",
              ".",
              ".",
              "Check if you have access through your login credentials or your institution to get full access on this article.",
              "Virginia Tech, Blacksburg, VA Copyright \u00a9 Copyright \u00a9 1988 IEEE.",
              "All Rights Reserved.",
              "IEEE Educational Activities Department United States View this article in digital edition.",
              "https://dl.",
              "acm.",
              "org/doi/10.",
              "1109/MAHC.",
              "1988.",
              "10004 We are preparing your search results for download .",
              ".",
              ".",
              "We will inform you here when the file is ready.",
              "Your file of search results citations is now ready.",
              "Your search export query has expired.",
              "Please try again."
            ]
          }
        ],
        "Short Code used mnemonic symbols to represent mathematical expressions.": [
          {
            "title": "Short Code (computer language) - Wikipedia",
            "url": "https://en.wikipedia.org/wiki/Short_Code_(computer_language)",
            "content": [
              "Short Code (computer language) - Wikipedia",
              "Short Code was one of the first higher-level languages developed for an electronic computer.",
              "[1] Unlike machine code, Short Code statements represented mathematic expressions rather than a machine instruction.",
              "Also known as an automatic programming, the source code was not compiled but executed through an interpreter to simplify the programming process;",
              "the execution time was much slower though.",
              "[2] Short Code was proposed by John Mauchly in 1949 and originally known as Brief Code.",
              "William Schmitt implemented a version of Brief Code in 1949 for the BINAC computer, though it was never debugged and tested.",
              "The following year Schmitt implemented a new version of Brief Code for the UNIVAC I, where it was now known as Short Code (also Short Order Code).",
              "A revised version of Short Code was developed in 1952 for the Univac II by A.",
              "B.",
              "Tonik and J.",
              "R.",
              "Logan.",
              "[3] While Short Code represented expressions, the representation itself was not direct and required a process of manual conversion.",
              "Elements of an expression were represented by two-character codes and then divided into 6-code groups in order to conform to the 12-byte words used by BINAC and Univac computers.",
              "[4] For example, the expression was converted to Short Code by a sequence of substitutions and a final regrouping: Along with basic arithmetic, Short Code allowed for branching and calls to a library of functions.",
              "The language was interpreted and ran about 50 times slower than machine code.",
              "[5]"
            ]
          },
          {
            "title": "To Understand Mathematical Symbols with Codes - Medium",
            "url": "https://medium.com/datasciencearth/to-understand-mathematical-symbols-with-codes-55904595d002",
            "content": [
              "To Understand Mathematical Symbols with Codes - Medium",
              "Data Science Earth Follow Data Science Earth -- Listen Share Summations, factorials, matrices and more, when we look at them with our favourite programming languages.",
              ".",
              ".",
              "For anyone interested in pursuing a career or research in the field of Machine Learning and Data Science, and who is curious about the mystery of mathematics behind everything, understanding mathematical symbols with codes will be really useful, albeit at a basic level, because of course, these codes are available in the unique libraries of many programming languages, but this will still allow us to see and read better from the mathematical window in terms of data science.",
              "Here I will give some code examples of python, of course, the codes of many functions and symbols are available in python libraries.",
              "But of course, the days will come when it is time to move beyond the python libraries.",
              "This will usually direct you to your notes when you work on paper, which explains how everything works and formulates.",
              "The deeper you understand the roots of mathematics, the closer you can be to instinctively develop a new method.",
              "Everything goes well on paper until, come across as an equation like below: For anyone who has studied mathematics or worked Machine Learning at the math level for years, such an equation can be easily understood and decomposed by writing code.",
              "But, for many others though, this may look like hieroglyphics.",
              "Because you are unfamiliar with what you do not know.",
              "The fact is that it almost seems like the ancient math leaders have chosen the most interesting looking symbols to define intuitive methods.",
              "The result: Equations and variables that look much more complex than they really are.",
              ".",
              ".",
              "I learned that code writing can be used for more than programming, but it is also necessary to know a globally accepted programming language in order to explain complexity.",
              "In the field of Data Science, while learning the math behind everything, I always argue that the best way to achieve a universal understanding of mathematics is to write code snippets to define equations.",
              "Understanding mathematical symbols by writing code allows you to reach a level where you can read them almost like reading text in a typical article.",
              "In this article, I would like to share with you some examples of how simple math can be when defined by codes!",
              "The summation symbol is one of the most useful and common symbols used in iterative mathematics.",
              "Despite its complex design, its application is quite simple, but it is incredibly useful too.",
              "As seen above, the all this symbol represents is to create a \u201cfor loop\u201d starting from the bottom number in the range bounded by the top number.",
              "The bottom number is the index variable, and each result per cycle is added to the overall result.",
              "Less commonly, the following may be used: Typically called the Product Operator, this symbol functions in the same manner, but instead of adding each result, they will be multiplied.",
              "Factorial symbol is the \u201c!",
              "\u201d (exclamation) which exists on almost any calculator.",
              "To many, this one may be a bit more obvious, but it is still worth it to write some code to understand the mechanics.",
              "5!",
              "would be represented as: Conditional brackets are used to divert the flow of an equation based on a series of conditions.",
              "For coders, this is simply only expressed by the common expression \u201cif \u201d (0if).",
              "The above conditional can be represented as: As seen above, the representation to the right of each line in square brackets determines what should happen in all conditions.",
              "I also added the extra \u201ccontains\u201d symbol to each condition to add more information.",
              "As seen above, I checked if the value of i is in the y array and assuming that it is, I returned the sum of the array.",
              "If the i value had not been in the array we would have returned 0 or 1 based on the value.",
              "Finally, for any Data Scientist, typically in their favourite language library, I want to quickly explain the operations made with the matrix multiplication.",
              "The easiest form to understand is the point wise operation.",
              "This is simply written as: Note the first requirement is that each matrix must have the same shape (ie # rows= & #Columns=) The code for this looks as follows: Lastly, let\u2019s take a look at a typical matrix multiplication process that is most commonly used in Machine Learning.",
              "In complex terms, this process finds the point result of each primary row with each secondary column.",
              "The main take away from this is the the following requirement: assume [#rows, #columns] \u2192matrices i x j requires #columns(i) == #rows(j) \u2192 with a final product of shape [#rows(i), #columns(j)] This may seem confusing and my best suggestion would be to take a look at google images for some great visualizations of these requirements.",
              "The code for this equation is as follows (by using the \u201cNumPy dot\u201d method): Here we have just focused on a few examples.",
              "Of course, understanding the simple codes given here will allow any programmer to more easily solve the initially complex math world.",
              "Of course, all of the methods shown here can be combined for efficiency and are often available in an easily accessible library.",
              "The main purpose in understanding such mathematical symbols by writing code is to see how meaningful they are when we encounter real operations.",
              "Thank you for reading I hope it was a useful sharing for all of us.",
              "If you want to follow my social media channels, you can click here.",
              "Hu\u0308seyin Gu\u0308zel -- -- Data Science Earth Data Science Earth in Data Science Earth -- ferhatmetin in Data Science Earth -- 5 ferhatmetin in Data Science Earth -- Data Science Earth in Data Science Earth -- Arslan Ahmad in Level Up Coding -- 34 Benoit Ruiz in Better Programming -- 229 Unbecoming -- 993 AL Anany -- 559 Vaishnav Manoj in DataX Journal -- 111 Nick Wignall -- 188 Help Status About Careers Blog Privacy Terms Text to speech Teams"
            ]
          },
          {
            "title": "Order of Operations \u2013 Programming Fundamentals",
            "url": "https://press.rebus.community/programmingfundamentals/chapter/order-of-operations/",
            "content": [
              "Order of Operations \u2013 Programming Fundamentals",
              "Primary Navigation Want to create or adapt books like this?",
              "Learn more about how Pressbooks supports open publishing practices.",
              "Book Contents Navigation Contents About this Book Kenneth Leroy Busbee and Dave Braunschweig Author Acknowledgements Kenneth Leroy Busbee and Dave Braunschweig Systems Development Life Cycle Kenneth Leroy Busbee Program Design Kenneth Leroy Busbee Program Quality Dave Braunschweig Pseudocode Kenneth Leroy Busbee Flowcharts Kenneth Leroy Busbee Software Testing Kenneth Leroy Busbee Integrated Development Environment Kenneth Leroy Busbee Version Control Dave Braunschweig Input and Output Kenneth Leroy Busbee Hello World Dave Braunschweig C++ Examples Dave Braunschweig C# Examples Dave Braunschweig Java Examples Dave Braunschweig JavaScript Examples Dave Braunschweig Python Examples Dave Braunschweig Swift Examples Dave Braunschweig Practice: Introduction to Programming Kenneth Leroy Busbee and Dave Braunschweig Constants and Variables Kenneth Leroy Busbee and Dave Braunschweig Identifier Names Kenneth Leroy Busbee and Dave Braunschweig Data Types Kenneth Leroy Busbee and Dave Braunschweig Integer Data Type Kenneth Leroy Busbee and Dave Braunschweig Floating-Point Data Type Kenneth Leroy Busbee and Dave Braunschweig String Data Type Kenneth Leroy Busbee and Dave Braunschweig Boolean Data Type Kenneth Leroy Busbee and Dave Braunschweig Nothing Data Type Dave Braunschweig Order of Operations Kenneth Leroy Busbee and Dave Braunschweig Assignment Kenneth Leroy Busbee Arithmetic Operators Kenneth Leroy Busbee and Dave Braunschweig Integer Division and Modulus Kenneth Leroy Busbee Unary Operations Kenneth Leroy Busbee Lvalue and Rvalue Kenneth Leroy Busbee Data Type Conversions Kenneth Leroy Busbee and Dave Braunschweig Input-Process-Output Model Dave Braunschweig C++ Examples Dave Braunschweig C# Examples Dave Braunschweig Java Examples Dave Braunschweig JavaScript Examples Dave Braunschweig Python Examples Dave Braunschweig Swift Examples Dave Braunschweig Practice: Data and Operators Kenneth Leroy Busbee and Dave Braunschweig Modular Programming Kenneth Leroy Busbee and Dave Braunschweig Hierarchy or Structure Chart Kenneth Leroy Busbee Function Examples Dave Braunschweig Parameters and Arguments Dave Braunschweig Call by Value vs. Call by Reference Dave Braunschweig Return Statement Dave Braunschweig and Kenneth Leroy Busbee Void Data Type Kenneth Leroy Busbee and Dave Braunschweig Scope Kenneth Leroy Busbee Programming Style Kenneth Leroy Busbee and Dave Braunschweig Standard Libraries Kenneth Leroy Busbee and Dave Braunschweig C++ Examples Dave Braunschweig C# Examples Dave Braunschweig Java Examples Dave Braunschweig JavaScript Examples Dave Braunschweig Python Examples Dave Braunschweig Swift Examples Dave Braunschweig Practice: Functions Kenneth Leroy Busbee and Dave Braunschweig Structured Programming Kenneth Leroy Busbee and Dave Braunschweig Selection Control Structures Kenneth Leroy Busbee and Dave Braunschweig If Then Else Kenneth Leroy Busbee Code Blocks Kenneth Leroy Busbee and Dave Braunschweig Relational Operators Kenneth Leroy Busbee Assignment vs Equality Kenneth Leroy Busbee Logical Operators Kenneth Leroy Busbee and Dave Braunschweig Nested If Then Else Kenneth Leroy Busbee Case Control Structure Kenneth Leroy Busbee Condition Examples Dave Braunschweig C++ Examples Dave Braunschweig C# Examples Dave Braunschweig Java Examples Dave Braunschweig JavaScript Examples Dave Braunschweig Python Examples Dave Braunschweig Swift Examples Dave Braunschweig Practice: Conditions Kenneth Leroy Busbee Iteration Control Structures Kenneth Leroy Busbee and Dave Braunschweig While Loop Kenneth Leroy Busbee Do While Loop Kenneth Leroy Busbee and Dave Braunschweig Flag Concept Kenneth Leroy Busbee For Loop Kenneth Leroy Busbee Branching Statements Kenneth Leroy Busbee Increment and Decrement Operators Kenneth Leroy Busbee Integer Overflow Kenneth Leroy Busbee Nested For Loops Kenneth Leroy Busbee Loop Examples Dave Braunschweig C++ Examples Dave Braunschweig C# Examples Dave Braunschweig Java Examples Dave Braunschweig JavaScript Examples Dave Braunschweig Python Examples Dave Braunschweig Swift Examples Dave Braunschweig Practice: Loops Kenneth Leroy Busbee Arrays and Lists Kenneth Leroy Busbee and Dave Braunschweig Index Notation Kenneth Leroy Busbee and Dave Braunschweig Displaying Array Members Kenneth Leroy Busbee and Dave Braunschweig Arrays and Functions Kenneth Leroy Busbee and Dave Braunschweig Math Statistics with Arrays Kenneth Leroy Busbee and Dave Braunschweig Searching Arrays Kenneth Leroy Busbee and Dave Braunschweig Sorting Arrays Kenneth Leroy Busbee and Dave Braunschweig Parallel Arrays Dave Braunschweig Multidimensional Arrays Kenneth Leroy Busbee Fixed and Dynamic Arrays Dave Braunschweig C++ Examples Dave Braunschweig C# Examples Dave Braunschweig Java Examples Dave Braunschweig JavaScript Examples Dave Braunschweig Python Examples Dave Braunschweig Swift Examples Dave Braunschweig Practice: Arrays Kenneth Leroy Busbee Strings Kenneth Leroy Busbee and Dave Braunschweig String Functions Dave Braunschweig String Formatting Kenneth Leroy Busbee and Dave Braunschweig File Input and Output Kenneth Leroy Busbee Loading an Array from a Text File Kenneth Leroy Busbee and Dave Braunschweig C++ Examples Dave Braunschweig C# Examples Dave Braunschweig Java Examples Dave Braunschweig JavaScript Examples Dave Braunschweig Python Examples Dave Braunschweig Swift Examples Dave Braunschweig Practice: Strings and Files Kenneth Leroy Busbee Objects and Classes Dave Braunschweig Encapsulation Dave Braunschweig Inheritance and Polymorphism Dave Braunschweig C++ Examples Dave Braunschweig C# Examples Dave Braunschweig Java Examples Dave Braunschweig JavaScript Examples Dave Braunschweig Python Examples Dave Braunschweig Swift Examples Dave Braunschweig Practice Kenneth Leroy Busbee Kenneth Leroy Busbee and Dave Braunschweig The order of operations (or operator precedence) is a collection of rules that reflect conventions about which procedures to perform first in order to evaluate a given mathematical expression.",
              "[1] Single values by themselves are important;",
              "however, we need a method of manipulating values (processing data).",
              "Scientists wanted an accurate machine for manipulating values.",
              "They wanted a machine to process numbers or calculate answers (that is, compute the answer).",
              "Prior to 1950, dictionaries listed the definition of computers as \u201d humans that do computations\u201d.",
              "Thus, all of the terminology for describing data manipulation is math oriented.",
              "Additionally, the two fundamental data type families (the integer family and floating-point family) consist entirely of number values.",
              "Let\u2019s look at an example: 2 + 3 * 4 + 5 is our expression but what does it equal?",
              "Parentheses would change the outcome.",
              "(2 + 3) * (4 + 5) evaluates to 45.",
              "Parentheses would change the outcome.",
              "(2 + 3) * 4 + 5 evaluates to 25.",
              "Each computer language has some rules that define precedence and associativity.",
              "They often follow rules we may have already learned.",
              "Multiplication and division come before addition and subtraction is a rule we learned in grade school.",
              "This rule still works.",
              "Order of Operations[2] A common mnemonic to remember this rule is PEMDAS, or Please Excuse My Dear Aunt Sally.",
              "Precedence rules may vary from one programming language to another.",
              "You should refer to the reference sheet that summarizes the rules for the language that you are using.",
              "It is often called an Operator Precedence, Precedence of Operators, or Order of Operations chart.",
              "You should review this chart as needed when evaluating expressions.",
              "A valid expression consists of operand(s) and operator(s) that are put together properly.",
              "Why the (s)?",
              "Some operators are: Most operators are binary, that is they require two operands.",
              "Some precedence charts indicate of which operators are unary and trinary and thus all others are binary.",
              "Previous/next navigation Programming Fundamentals Copyright \u00a9 2018 by Kenneth Leroy Busbee and Dave Braunschweig is licensed under a Creative Commons Attribution-ShareAlike 4.",
              "0 International License, except where otherwise noted.",
              "Powered by Pressbooks"
            ]
          }
        ]
      },
      "evidence": {
        "The first programming language for a computer was Plankalk\u00fcl, developed by Konrad Zuse for the Z3 between 1943 and 1945.": [
          "Plankalku\u0308l is a programming language ideal for engineering purposes. The language was developed by Konrad Zuse, a German engineer and computer pioneer in the 1940s, and stood out as the first high-level computer programming language to be created.",
          "When Zuse created his Plankalku\u0308l language, the world was fighting the Second World War.",
          "Due to that, the implementation of the programming language idea flopped, making it remain only on paper.",
          "In 1939, the German inventor came up with an idea to develop something that later became Plankalku\u0308l.",
          "In 1945, Zuse wrote an unpublished book describing his Plankalku\u0308l.",
          "Plankalku\u0308l refers to a programming language developed by Konrad Zuse in 1940s. Initially, the language was designed for engineering purposes and was the first to be developed for a computer.",
          "Plankalk\u00fcl - Wikipedia Plankalku\u0308l (German pronunciation: [\u02c8pla\u02d0nkalky\u02d0l]) is a programming language designed for engineering purposes by Konrad Zuse between 1942 and 1945.",
          "It was the first high-level programming language to be designed for a computer.",
          "In May 1939, he described his plans for the development of what would become Plankalku\u0308l.",
          "In 1942 he began writing a chess program in Plankalku\u0308l.",
          "In 1945, Zuse described Plankalku\u0308l in an unpublished book.",
          "On May 12, 1941, Konrad Zuse presented the Z3 - the first automatic, programmable computer.",
          "But there's only a small chance Zuse and Schreyer knew what they were doing.",
          "\"In 1941, probably no one - not even Zuse or one of the other inventors of computing machines - could have imagined how, decades later, such machines would have an impact on our everyday lives,\" says Matthias Hagen, a professor of big data analytics at Bauhaus University Weimar."
        ],
        "Plankalk\u00fcl was not implemented until 1998.": [
          "Due to that, the implementation of the programming language idea flopped, making it remain only on paper.",
          "And finally, a comprehensive publication of the Plankalku\u0308l programming language happened in 1972. Even so, the implementation of its first compiler was done in 1995 by Joachim Hohmann in his dissertation paper.",
          "Thereafter, other independent applications took place in 1998 and then in 2000 at the University of Berlin.",
          "This chapter describes the first implementation of Plankalku\u0308l, the programming symbolism invented by Konrad Zuse in 1945."
        ],
        "Plankalk\u00fcl was inspired by mathematical logic and set theory.": [],
        "The first high-level programming language was Short Code.": [
          "The first high-level programming language was Plankalku\u0308l, created by Konrad Zuse between 1942 and 1945.",
          "An early proposal for a high-level programming language was Plankalku\u0308l, developed by Konrad Zuse for his Z1 computer between 1942 and 1945 but not implemented at the time.",
          "John Mauchly's Short Code, proposed in 1949, was one of the first high-level languages ever developed for an electronic computer.",
          "The first high-level language to have an associated compiler was created by Corrado Bo\u0308hm in 1951, for his PhD thesis.",
          "The first commercially available language was FORTRAN (FORmula TRANslation), developed in 1956 (first manual appeared in 1956, but first developed in 1954) by a team led by John Backus at IBM.",
          "In the early 1950s, Alick Glennie developed Autocode, possibly the first compiled programming language, at the University of Manchester.",
          "Short Code was one of the first higher-level languages developed for an electronic computer.",
          "Officially, the first programming language for a computer was Plankalku\u0308l, developed by Konrad Zuse for the Z3 between 1943 and 1945.",
          "Short Code, proposed by John Mauchly in 1949, is considered the first high-level programming language."
        ],
        "Short Code was proposed by John Mauchly in 1949.": [
          "Short Code was proposed by John Mauchly in 1949 and originally known as Brief Code.",
          "The UNIVAC SHORT CODE, the first example of a high level programming language actually intended to be used with an electronic computer was proposed by John W. Mauchly in July 1949."
        ],
        "Short Code used mnemonic symbols to represent mathematical expressions.": []
      },
      "subconclusions": {
        "The first programming language for a computer was Plankalk\u00fcl, developed by Konrad Zuse for the Z3 between 1943 and 1945.": "partially supported",
        "Plankalk\u00fcl was not implemented until 1998.": "partially supported",
        "Plankalk\u00fcl was inspired by mathematical logic and set theory.": "not supported",
        "The first high-level programming language was Short Code.": "refuted",
        "Short Code was proposed by John Mauchly in 1949.": "supported",
        "Short Code used mnemonic symbols to represent mathematical expressions.": "not supported"
      }
    }
  }
}